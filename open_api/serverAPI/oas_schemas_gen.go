// Code generated by ogen, DO NOT EDIT.

package serverAPI

import (
	"io"
	"net/url"
	"time"

	"github.com/go-faster/errors"
	"github.com/google/uuid"
)

type APIAgentDeletePostBadRequest ErrorResponse

func (*APIAgentDeletePostBadRequest) aPIAgentDeletePostRes() {}

type APIAgentDeletePostForbidden ErrorResponse

func (*APIAgentDeletePostForbidden) aPIAgentDeletePostRes() {}

type APIAgentDeletePostInternalServerError ErrorResponse

func (*APIAgentDeletePostInternalServerError) aPIAgentDeletePostRes() {}

// APIAgentDeletePostNoContent is response for APIAgentDeletePost operation.
type APIAgentDeletePostNoContent struct{}

func (*APIAgentDeletePostNoContent) aPIAgentDeletePostRes() {}

type APIAgentDeletePostNotFound ErrorResponse

func (*APIAgentDeletePostNotFound) aPIAgentDeletePostRes() {}

type APIAgentDeletePostReq struct {
	// ID агента.
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *APIAgentDeletePostReq) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *APIAgentDeletePostReq) SetID(val uuid.UUID) {
	s.ID = val
}

type APIAgentDeletePostUnauthorized ErrorResponse

func (*APIAgentDeletePostUnauthorized) aPIAgentDeletePostRes() {}

type APIAgentListPostBadRequest ErrorResponse

func (*APIAgentListPostBadRequest) aPIAgentListPostRes() {}

type APIAgentListPostForbidden ErrorResponse

func (*APIAgentListPostForbidden) aPIAgentListPostRes() {}

type APIAgentListPostInternalServerError ErrorResponse

func (*APIAgentListPostInternalServerError) aPIAgentListPostRes() {}

type APIAgentListPostOKApplicationJSON []APIAgentListPostOKItem

func (*APIAgentListPostOKApplicationJSON) aPIAgentListPostRes() {}

type APIAgentListPostOKItem struct {
	// Статус агента.
	Status OptAPIAgentListPostOKItemStatus `json:"status"`
	// ID агента.
	ID uuid.UUID `json:"id"`
	// Название агента.
	Name string `json:"name"`
	// Адрес агента.
	Addr url.URL `json:"addr"`
	// Может ли агент обрабатывать ссылки внешних систем.
	CanParse bool `json:"can_parse"`
	// Может ли агент обрабатывать множественные ссылки
	// внешних систем.
	CanParseMulti bool `json:"can_parse_multi"`
	// Может ли агент экспортировать данные из системы.
	CanExport bool `json:"can_export"`
	// Приоритет при выборе агентов.
	Priority int `json:"priority"`
	// Время создания агента.
	CreateAt time.Time `json:"create_at"`
}

// GetStatus returns the value of Status.
func (s *APIAgentListPostOKItem) GetStatus() OptAPIAgentListPostOKItemStatus {
	return s.Status
}

// GetID returns the value of ID.
func (s *APIAgentListPostOKItem) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *APIAgentListPostOKItem) GetName() string {
	return s.Name
}

// GetAddr returns the value of Addr.
func (s *APIAgentListPostOKItem) GetAddr() url.URL {
	return s.Addr
}

// GetCanParse returns the value of CanParse.
func (s *APIAgentListPostOKItem) GetCanParse() bool {
	return s.CanParse
}

// GetCanParseMulti returns the value of CanParseMulti.
func (s *APIAgentListPostOKItem) GetCanParseMulti() bool {
	return s.CanParseMulti
}

// GetCanExport returns the value of CanExport.
func (s *APIAgentListPostOKItem) GetCanExport() bool {
	return s.CanExport
}

// GetPriority returns the value of Priority.
func (s *APIAgentListPostOKItem) GetPriority() int {
	return s.Priority
}

// GetCreateAt returns the value of CreateAt.
func (s *APIAgentListPostOKItem) GetCreateAt() time.Time {
	return s.CreateAt
}

// SetStatus sets the value of Status.
func (s *APIAgentListPostOKItem) SetStatus(val OptAPIAgentListPostOKItemStatus) {
	s.Status = val
}

// SetID sets the value of ID.
func (s *APIAgentListPostOKItem) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *APIAgentListPostOKItem) SetName(val string) {
	s.Name = val
}

// SetAddr sets the value of Addr.
func (s *APIAgentListPostOKItem) SetAddr(val url.URL) {
	s.Addr = val
}

// SetCanParse sets the value of CanParse.
func (s *APIAgentListPostOKItem) SetCanParse(val bool) {
	s.CanParse = val
}

// SetCanParseMulti sets the value of CanParseMulti.
func (s *APIAgentListPostOKItem) SetCanParseMulti(val bool) {
	s.CanParseMulti = val
}

// SetCanExport sets the value of CanExport.
func (s *APIAgentListPostOKItem) SetCanExport(val bool) {
	s.CanExport = val
}

// SetPriority sets the value of Priority.
func (s *APIAgentListPostOKItem) SetPriority(val int) {
	s.Priority = val
}

// SetCreateAt sets the value of CreateAt.
func (s *APIAgentListPostOKItem) SetCreateAt(val time.Time) {
	s.CreateAt = val
}

// Статус агента.
type APIAgentListPostOKItemStatus struct {
	// Время запуска агента.
	StartAt OptDateTime `json:"start_at"`
	// Ошибка которая возникла при получении статуса.
	CheckStatusError OptString `json:"check_status_error"`
	// Текущее состояние агента.
	Status APIAgentListPostOKItemStatusStatus `json:"status"`
	// Список проблем.
	Problems []APIAgentListPostOKItemStatusProblemsItem `json:"problems"`
}

// GetStartAt returns the value of StartAt.
func (s *APIAgentListPostOKItemStatus) GetStartAt() OptDateTime {
	return s.StartAt
}

// GetCheckStatusError returns the value of CheckStatusError.
func (s *APIAgentListPostOKItemStatus) GetCheckStatusError() OptString {
	return s.CheckStatusError
}

// GetStatus returns the value of Status.
func (s *APIAgentListPostOKItemStatus) GetStatus() APIAgentListPostOKItemStatusStatus {
	return s.Status
}

// GetProblems returns the value of Problems.
func (s *APIAgentListPostOKItemStatus) GetProblems() []APIAgentListPostOKItemStatusProblemsItem {
	return s.Problems
}

// SetStartAt sets the value of StartAt.
func (s *APIAgentListPostOKItemStatus) SetStartAt(val OptDateTime) {
	s.StartAt = val
}

// SetCheckStatusError sets the value of CheckStatusError.
func (s *APIAgentListPostOKItemStatus) SetCheckStatusError(val OptString) {
	s.CheckStatusError = val
}

// SetStatus sets the value of Status.
func (s *APIAgentListPostOKItemStatus) SetStatus(val APIAgentListPostOKItemStatusStatus) {
	s.Status = val
}

// SetProblems sets the value of Problems.
func (s *APIAgentListPostOKItemStatus) SetProblems(val []APIAgentListPostOKItemStatusProblemsItem) {
	s.Problems = val
}

type APIAgentListPostOKItemStatusProblemsItem struct {
	// Тип проблемы.
	Type APIAgentListPostOKItemStatusProblemsItemType `json:"type"`
	// Описание проблемы.
	Details string `json:"details"`
}

// GetType returns the value of Type.
func (s *APIAgentListPostOKItemStatusProblemsItem) GetType() APIAgentListPostOKItemStatusProblemsItemType {
	return s.Type
}

// GetDetails returns the value of Details.
func (s *APIAgentListPostOKItemStatusProblemsItem) GetDetails() string {
	return s.Details
}

// SetType sets the value of Type.
func (s *APIAgentListPostOKItemStatusProblemsItem) SetType(val APIAgentListPostOKItemStatusProblemsItemType) {
	s.Type = val
}

// SetDetails sets the value of Details.
func (s *APIAgentListPostOKItemStatusProblemsItem) SetDetails(val string) {
	s.Details = val
}

// Тип проблемы.
type APIAgentListPostOKItemStatusProblemsItemType string

const (
	APIAgentListPostOKItemStatusProblemsItemTypeInfo    APIAgentListPostOKItemStatusProblemsItemType = "info"
	APIAgentListPostOKItemStatusProblemsItemTypeWarning APIAgentListPostOKItemStatusProblemsItemType = "warning"
	APIAgentListPostOKItemStatusProblemsItemTypeError   APIAgentListPostOKItemStatusProblemsItemType = "error"
)

// AllValues returns all APIAgentListPostOKItemStatusProblemsItemType values.
func (APIAgentListPostOKItemStatusProblemsItemType) AllValues() []APIAgentListPostOKItemStatusProblemsItemType {
	return []APIAgentListPostOKItemStatusProblemsItemType{
		APIAgentListPostOKItemStatusProblemsItemTypeInfo,
		APIAgentListPostOKItemStatusProblemsItemTypeWarning,
		APIAgentListPostOKItemStatusProblemsItemTypeError,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APIAgentListPostOKItemStatusProblemsItemType) MarshalText() ([]byte, error) {
	switch s {
	case APIAgentListPostOKItemStatusProblemsItemTypeInfo:
		return []byte(s), nil
	case APIAgentListPostOKItemStatusProblemsItemTypeWarning:
		return []byte(s), nil
	case APIAgentListPostOKItemStatusProblemsItemTypeError:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APIAgentListPostOKItemStatusProblemsItemType) UnmarshalText(data []byte) error {
	switch APIAgentListPostOKItemStatusProblemsItemType(data) {
	case APIAgentListPostOKItemStatusProblemsItemTypeInfo:
		*s = APIAgentListPostOKItemStatusProblemsItemTypeInfo
		return nil
	case APIAgentListPostOKItemStatusProblemsItemTypeWarning:
		*s = APIAgentListPostOKItemStatusProblemsItemTypeWarning
		return nil
	case APIAgentListPostOKItemStatusProblemsItemTypeError:
		*s = APIAgentListPostOKItemStatusProblemsItemTypeError
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Текущее состояние агента.
type APIAgentListPostOKItemStatusStatus string

const (
	APIAgentListPostOKItemStatusStatusOk      APIAgentListPostOKItemStatusStatus = "ok"
	APIAgentListPostOKItemStatusStatusWarning APIAgentListPostOKItemStatusStatus = "warning"
	APIAgentListPostOKItemStatusStatusError   APIAgentListPostOKItemStatusStatus = "error"
	APIAgentListPostOKItemStatusStatusOffline APIAgentListPostOKItemStatusStatus = "offline"
	APIAgentListPostOKItemStatusStatusUnknown APIAgentListPostOKItemStatusStatus = "unknown"
)

// AllValues returns all APIAgentListPostOKItemStatusStatus values.
func (APIAgentListPostOKItemStatusStatus) AllValues() []APIAgentListPostOKItemStatusStatus {
	return []APIAgentListPostOKItemStatusStatus{
		APIAgentListPostOKItemStatusStatusOk,
		APIAgentListPostOKItemStatusStatusWarning,
		APIAgentListPostOKItemStatusStatusError,
		APIAgentListPostOKItemStatusStatusOffline,
		APIAgentListPostOKItemStatusStatusUnknown,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APIAgentListPostOKItemStatusStatus) MarshalText() ([]byte, error) {
	switch s {
	case APIAgentListPostOKItemStatusStatusOk:
		return []byte(s), nil
	case APIAgentListPostOKItemStatusStatusWarning:
		return []byte(s), nil
	case APIAgentListPostOKItemStatusStatusError:
		return []byte(s), nil
	case APIAgentListPostOKItemStatusStatusOffline:
		return []byte(s), nil
	case APIAgentListPostOKItemStatusStatusUnknown:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APIAgentListPostOKItemStatusStatus) UnmarshalText(data []byte) error {
	switch APIAgentListPostOKItemStatusStatus(data) {
	case APIAgentListPostOKItemStatusStatusOk:
		*s = APIAgentListPostOKItemStatusStatusOk
		return nil
	case APIAgentListPostOKItemStatusStatusWarning:
		*s = APIAgentListPostOKItemStatusStatusWarning
		return nil
	case APIAgentListPostOKItemStatusStatusError:
		*s = APIAgentListPostOKItemStatusStatusError
		return nil
	case APIAgentListPostOKItemStatusStatusOffline:
		*s = APIAgentListPostOKItemStatusStatusOffline
		return nil
	case APIAgentListPostOKItemStatusStatusUnknown:
		*s = APIAgentListPostOKItemStatusStatusUnknown
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type APIAgentListPostReq struct {
	// Может ли агент обрабатывать ссылки внешних систем.
	CanParse OptBool `json:"can_parse"`
	// Может ли агент экспортировать данные из системы.
	CanExport OptBool `json:"can_export"`
	// Может ли агент обрабатывать множественные ссылки
	// внешних систем.
	CanParseMulti OptBool `json:"can_parse_multi"`
	// Проверить состояние агента (запрос статуса у самого
	// агента).
	IncludeStatus OptBool `json:"include_status"`
}

// GetCanParse returns the value of CanParse.
func (s *APIAgentListPostReq) GetCanParse() OptBool {
	return s.CanParse
}

// GetCanExport returns the value of CanExport.
func (s *APIAgentListPostReq) GetCanExport() OptBool {
	return s.CanExport
}

// GetCanParseMulti returns the value of CanParseMulti.
func (s *APIAgentListPostReq) GetCanParseMulti() OptBool {
	return s.CanParseMulti
}

// GetIncludeStatus returns the value of IncludeStatus.
func (s *APIAgentListPostReq) GetIncludeStatus() OptBool {
	return s.IncludeStatus
}

// SetCanParse sets the value of CanParse.
func (s *APIAgentListPostReq) SetCanParse(val OptBool) {
	s.CanParse = val
}

// SetCanExport sets the value of CanExport.
func (s *APIAgentListPostReq) SetCanExport(val OptBool) {
	s.CanExport = val
}

// SetCanParseMulti sets the value of CanParseMulti.
func (s *APIAgentListPostReq) SetCanParseMulti(val OptBool) {
	s.CanParseMulti = val
}

// SetIncludeStatus sets the value of IncludeStatus.
func (s *APIAgentListPostReq) SetIncludeStatus(val OptBool) {
	s.IncludeStatus = val
}

type APIAgentListPostUnauthorized ErrorResponse

func (*APIAgentListPostUnauthorized) aPIAgentListPostRes() {}

type APIAgentNewPostBadRequest ErrorResponse

func (*APIAgentNewPostBadRequest) aPIAgentNewPostRes() {}

type APIAgentNewPostForbidden ErrorResponse

func (*APIAgentNewPostForbidden) aPIAgentNewPostRes() {}

type APIAgentNewPostInternalServerError ErrorResponse

func (*APIAgentNewPostInternalServerError) aPIAgentNewPostRes() {}

// APIAgentNewPostNoContent is response for APIAgentNewPost operation.
type APIAgentNewPostNoContent struct{}

func (*APIAgentNewPostNoContent) aPIAgentNewPostRes() {}

type APIAgentNewPostReq struct {
	// Название агента.
	Name string `json:"name"`
	// Адрес агента.
	Addr url.URL `json:"addr"`
	// Токен доступа к агенту.
	Token string `json:"token"`
	// Может ли агент обрабатывать ссылки внешних систем.
	CanParse OptBool `json:"can_parse"`
	// Может ли агент обрабатывать множественные ссылки
	// внешних систем.
	CanParseMulti OptBool `json:"can_parse_multi"`
	// Может ли агент экспортировать данные из системы.
	CanExport OptBool `json:"can_export"`
	// Приоритет при выборе агентов.
	Priority OptInt `json:"priority"`
}

// GetName returns the value of Name.
func (s *APIAgentNewPostReq) GetName() string {
	return s.Name
}

// GetAddr returns the value of Addr.
func (s *APIAgentNewPostReq) GetAddr() url.URL {
	return s.Addr
}

// GetToken returns the value of Token.
func (s *APIAgentNewPostReq) GetToken() string {
	return s.Token
}

// GetCanParse returns the value of CanParse.
func (s *APIAgentNewPostReq) GetCanParse() OptBool {
	return s.CanParse
}

// GetCanParseMulti returns the value of CanParseMulti.
func (s *APIAgentNewPostReq) GetCanParseMulti() OptBool {
	return s.CanParseMulti
}

// GetCanExport returns the value of CanExport.
func (s *APIAgentNewPostReq) GetCanExport() OptBool {
	return s.CanExport
}

// GetPriority returns the value of Priority.
func (s *APIAgentNewPostReq) GetPriority() OptInt {
	return s.Priority
}

// SetName sets the value of Name.
func (s *APIAgentNewPostReq) SetName(val string) {
	s.Name = val
}

// SetAddr sets the value of Addr.
func (s *APIAgentNewPostReq) SetAddr(val url.URL) {
	s.Addr = val
}

// SetToken sets the value of Token.
func (s *APIAgentNewPostReq) SetToken(val string) {
	s.Token = val
}

// SetCanParse sets the value of CanParse.
func (s *APIAgentNewPostReq) SetCanParse(val OptBool) {
	s.CanParse = val
}

// SetCanParseMulti sets the value of CanParseMulti.
func (s *APIAgentNewPostReq) SetCanParseMulti(val OptBool) {
	s.CanParseMulti = val
}

// SetCanExport sets the value of CanExport.
func (s *APIAgentNewPostReq) SetCanExport(val OptBool) {
	s.CanExport = val
}

// SetPriority sets the value of Priority.
func (s *APIAgentNewPostReq) SetPriority(val OptInt) {
	s.Priority = val
}

type APIAgentNewPostUnauthorized ErrorResponse

func (*APIAgentNewPostUnauthorized) aPIAgentNewPostRes() {}

type APIAgentTaskExportPostBadRequest ErrorResponse

func (*APIAgentTaskExportPostBadRequest) aPIAgentTaskExportPostRes() {}

type APIAgentTaskExportPostForbidden ErrorResponse

func (*APIAgentTaskExportPostForbidden) aPIAgentTaskExportPostRes() {}

type APIAgentTaskExportPostInternalServerError ErrorResponse

func (*APIAgentTaskExportPostInternalServerError) aPIAgentTaskExportPostRes() {}

// APIAgentTaskExportPostNoContent is response for APIAgentTaskExportPost operation.
type APIAgentTaskExportPostNoContent struct{}

func (*APIAgentTaskExportPostNoContent) aPIAgentTaskExportPostRes() {}

type APIAgentTaskExportPostReq struct {
	BookFilter BookFilter `json:"book_filter"`
	// ID агента.
	Exporter uuid.UUID `json:"exporter"`
	// Удалять ли файлы после экспорта.
	DeleteAfter OptBool `json:"delete_after"`
}

// GetBookFilter returns the value of BookFilter.
func (s *APIAgentTaskExportPostReq) GetBookFilter() BookFilter {
	return s.BookFilter
}

// GetExporter returns the value of Exporter.
func (s *APIAgentTaskExportPostReq) GetExporter() uuid.UUID {
	return s.Exporter
}

// GetDeleteAfter returns the value of DeleteAfter.
func (s *APIAgentTaskExportPostReq) GetDeleteAfter() OptBool {
	return s.DeleteAfter
}

// SetBookFilter sets the value of BookFilter.
func (s *APIAgentTaskExportPostReq) SetBookFilter(val BookFilter) {
	s.BookFilter = val
}

// SetExporter sets the value of Exporter.
func (s *APIAgentTaskExportPostReq) SetExporter(val uuid.UUID) {
	s.Exporter = val
}

// SetDeleteAfter sets the value of DeleteAfter.
func (s *APIAgentTaskExportPostReq) SetDeleteAfter(val OptBool) {
	s.DeleteAfter = val
}

type APIAgentTaskExportPostUnauthorized ErrorResponse

func (*APIAgentTaskExportPostUnauthorized) aPIAgentTaskExportPostRes() {}

type APIAttributeCountGetForbidden ErrorResponse

func (*APIAttributeCountGetForbidden) aPIAttributeCountGetRes() {}

type APIAttributeCountGetInternalServerError ErrorResponse

func (*APIAttributeCountGetInternalServerError) aPIAttributeCountGetRes() {}

type APIAttributeCountGetOK struct {
	// Список аттрибутов.
	Attributes []APIAttributeCountGetOKAttributesItem `json:"attributes"`
}

// GetAttributes returns the value of Attributes.
func (s *APIAttributeCountGetOK) GetAttributes() []APIAttributeCountGetOKAttributesItem {
	return s.Attributes
}

// SetAttributes sets the value of Attributes.
func (s *APIAttributeCountGetOK) SetAttributes(val []APIAttributeCountGetOKAttributesItem) {
	s.Attributes = val
}

func (*APIAttributeCountGetOK) aPIAttributeCountGetRes() {}

type APIAttributeCountGetOKAttributesItem struct {
	// Код аттрибута.
	Code string `json:"code"`
	// Значение аттрибута.
	Value string `json:"value"`
	// Количество книг с таким аттрибутом.
	Count int `json:"count"`
}

// GetCode returns the value of Code.
func (s *APIAttributeCountGetOKAttributesItem) GetCode() string {
	return s.Code
}

// GetValue returns the value of Value.
func (s *APIAttributeCountGetOKAttributesItem) GetValue() string {
	return s.Value
}

// GetCount returns the value of Count.
func (s *APIAttributeCountGetOKAttributesItem) GetCount() int {
	return s.Count
}

// SetCode sets the value of Code.
func (s *APIAttributeCountGetOKAttributesItem) SetCode(val string) {
	s.Code = val
}

// SetValue sets the value of Value.
func (s *APIAttributeCountGetOKAttributesItem) SetValue(val string) {
	s.Value = val
}

// SetCount sets the value of Count.
func (s *APIAttributeCountGetOKAttributesItem) SetCount(val int) {
	s.Count = val
}

type APIAttributeCountGetUnauthorized ErrorResponse

func (*APIAttributeCountGetUnauthorized) aPIAttributeCountGetRes() {}

type APIBookArchiveIDGetBadRequest ErrorResponse

func (*APIBookArchiveIDGetBadRequest) aPIBookArchiveIDGetRes() {}

type APIBookArchiveIDGetForbidden ErrorResponse

func (*APIBookArchiveIDGetForbidden) aPIBookArchiveIDGetRes() {}

type APIBookArchiveIDGetInternalServerError ErrorResponse

func (*APIBookArchiveIDGetInternalServerError) aPIBookArchiveIDGetRes() {}

type APIBookArchiveIDGetNotFound ErrorResponse

func (*APIBookArchiveIDGetNotFound) aPIBookArchiveIDGetRes() {}

type APIBookArchiveIDGetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s APIBookArchiveIDGetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

// APIBookArchiveIDGetOKHeaders wraps APIBookArchiveIDGetOK with response headers.
type APIBookArchiveIDGetOKHeaders struct {
	ContentDisposition OptString
	ContentType        string
	Response           APIBookArchiveIDGetOK
}

// GetContentDisposition returns the value of ContentDisposition.
func (s *APIBookArchiveIDGetOKHeaders) GetContentDisposition() OptString {
	return s.ContentDisposition
}

// GetContentType returns the value of ContentType.
func (s *APIBookArchiveIDGetOKHeaders) GetContentType() string {
	return s.ContentType
}

// GetResponse returns the value of Response.
func (s *APIBookArchiveIDGetOKHeaders) GetResponse() APIBookArchiveIDGetOK {
	return s.Response
}

// SetContentDisposition sets the value of ContentDisposition.
func (s *APIBookArchiveIDGetOKHeaders) SetContentDisposition(val OptString) {
	s.ContentDisposition = val
}

// SetContentType sets the value of ContentType.
func (s *APIBookArchiveIDGetOKHeaders) SetContentType(val string) {
	s.ContentType = val
}

// SetResponse sets the value of Response.
func (s *APIBookArchiveIDGetOKHeaders) SetResponse(val APIBookArchiveIDGetOK) {
	s.Response = val
}

func (*APIBookArchiveIDGetOKHeaders) aPIBookArchiveIDGetRes() {}

type APIBookArchiveIDGetUnauthorized ErrorResponse

func (*APIBookArchiveIDGetUnauthorized) aPIBookArchiveIDGetRes() {}

type APIBookDeletePostBadRequest ErrorResponse

func (*APIBookDeletePostBadRequest) aPIBookDeletePostRes() {}

type APIBookDeletePostForbidden ErrorResponse

func (*APIBookDeletePostForbidden) aPIBookDeletePostRes() {}

type APIBookDeletePostInternalServerError ErrorResponse

func (*APIBookDeletePostInternalServerError) aPIBookDeletePostRes() {}

// APIBookDeletePostNoContent is response for APIBookDeletePost operation.
type APIBookDeletePostNoContent struct{}

func (*APIBookDeletePostNoContent) aPIBookDeletePostRes() {}

type APIBookDeletePostNotFound ErrorResponse

func (*APIBookDeletePostNotFound) aPIBookDeletePostRes() {}

type APIBookDeletePostReq struct {
	// ID книги.
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *APIBookDeletePostReq) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *APIBookDeletePostReq) SetID(val uuid.UUID) {
	s.ID = val
}

type APIBookDeletePostUnauthorized ErrorResponse

func (*APIBookDeletePostUnauthorized) aPIBookDeletePostRes() {}

type APIBookDetailsPostBadRequest ErrorResponse

func (*APIBookDetailsPostBadRequest) aPIBookDetailsPostRes() {}

type APIBookDetailsPostForbidden ErrorResponse

func (*APIBookDetailsPostForbidden) aPIBookDetailsPostRes() {}

type APIBookDetailsPostInternalServerError ErrorResponse

func (*APIBookDetailsPostInternalServerError) aPIBookDetailsPostRes() {}

type APIBookDetailsPostNotFound ErrorResponse

func (*APIBookDetailsPostNotFound) aPIBookDetailsPostRes() {}

type APIBookDetailsPostReq struct {
	// ID книги.
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *APIBookDetailsPostReq) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *APIBookDetailsPostReq) SetID(val uuid.UUID) {
	s.ID = val
}

type APIBookDetailsPostUnauthorized ErrorResponse

func (*APIBookDetailsPostUnauthorized) aPIBookDetailsPostRes() {}

type APIBookListPostBadRequest ErrorResponse

func (*APIBookListPostBadRequest) aPIBookListPostRes() {}

type APIBookListPostForbidden ErrorResponse

func (*APIBookListPostForbidden) aPIBookListPostRes() {}

type APIBookListPostInternalServerError ErrorResponse

func (*APIBookListPostInternalServerError) aPIBookListPostRes() {}

type APIBookListPostOK struct {
	// Список книг.
	Books []BookShortInfo `json:"books"`
	// Общее количество книг по фильтру.
	Count int `json:"count"`
	// Форматированный список страниц.
	Pages []APIBookListPostOKPagesItem `json:"pages"`
}

// GetBooks returns the value of Books.
func (s *APIBookListPostOK) GetBooks() []BookShortInfo {
	return s.Books
}

// GetCount returns the value of Count.
func (s *APIBookListPostOK) GetCount() int {
	return s.Count
}

// GetPages returns the value of Pages.
func (s *APIBookListPostOK) GetPages() []APIBookListPostOKPagesItem {
	return s.Pages
}

// SetBooks sets the value of Books.
func (s *APIBookListPostOK) SetBooks(val []BookShortInfo) {
	s.Books = val
}

// SetCount sets the value of Count.
func (s *APIBookListPostOK) SetCount(val int) {
	s.Count = val
}

// SetPages sets the value of Pages.
func (s *APIBookListPostOK) SetPages(val []APIBookListPostOKPagesItem) {
	s.Pages = val
}

func (*APIBookListPostOK) aPIBookListPostRes() {}

type APIBookListPostOKPagesItem struct {
	// Номер страницы.
	Value int `json:"value"`
	// Это активная страница (по факту запрошенная).
	IsCurrent bool `json:"is_current"`
	// Это разделитель страниц.
	IsSeparator bool `json:"is_separator"`
}

// GetValue returns the value of Value.
func (s *APIBookListPostOKPagesItem) GetValue() int {
	return s.Value
}

// GetIsCurrent returns the value of IsCurrent.
func (s *APIBookListPostOKPagesItem) GetIsCurrent() bool {
	return s.IsCurrent
}

// GetIsSeparator returns the value of IsSeparator.
func (s *APIBookListPostOKPagesItem) GetIsSeparator() bool {
	return s.IsSeparator
}

// SetValue sets the value of Value.
func (s *APIBookListPostOKPagesItem) SetValue(val int) {
	s.Value = val
}

// SetIsCurrent sets the value of IsCurrent.
func (s *APIBookListPostOKPagesItem) SetIsCurrent(val bool) {
	s.IsCurrent = val
}

// SetIsSeparator sets the value of IsSeparator.
func (s *APIBookListPostOKPagesItem) SetIsSeparator(val bool) {
	s.IsSeparator = val
}

type APIBookListPostUnauthorized ErrorResponse

func (*APIBookListPostUnauthorized) aPIBookListPostRes() {}

type APIBookRawPostBadRequest ErrorResponse

func (*APIBookRawPostBadRequest) aPIBookRawPostRes() {}

type APIBookRawPostForbidden ErrorResponse

func (*APIBookRawPostForbidden) aPIBookRawPostRes() {}

type APIBookRawPostInternalServerError ErrorResponse

func (*APIBookRawPostInternalServerError) aPIBookRawPostRes() {}

type APIBookRawPostNotFound ErrorResponse

func (*APIBookRawPostNotFound) aPIBookRawPostRes() {}

type APIBookRawPostReq struct {
	// ID книги.
	ID OptUUID `json:"id"`
	// Оригинальный URL книги.
	URL OptURI `json:"url"`
}

// GetID returns the value of ID.
func (s *APIBookRawPostReq) GetID() OptUUID {
	return s.ID
}

// GetURL returns the value of URL.
func (s *APIBookRawPostReq) GetURL() OptURI {
	return s.URL
}

// SetID sets the value of ID.
func (s *APIBookRawPostReq) SetID(val OptUUID) {
	s.ID = val
}

// SetURL sets the value of URL.
func (s *APIBookRawPostReq) SetURL(val OptURI) {
	s.URL = val
}

type APIBookRawPostUnauthorized ErrorResponse

func (*APIBookRawPostUnauthorized) aPIBookRawPostRes() {}

type APIBookRebuildPostBadRequest ErrorResponse

func (*APIBookRebuildPostBadRequest) aPIBookRebuildPostRes() {}

type APIBookRebuildPostForbidden ErrorResponse

func (*APIBookRebuildPostForbidden) aPIBookRebuildPostRes() {}

type APIBookRebuildPostInternalServerError ErrorResponse

func (*APIBookRebuildPostInternalServerError) aPIBookRebuildPostRes() {}

type APIBookRebuildPostNotFound ErrorResponse

func (*APIBookRebuildPostNotFound) aPIBookRebuildPostRes() {}

type APIBookRebuildPostOK struct {
	// ID книги в которую были добавлены страницы.
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *APIBookRebuildPostOK) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *APIBookRebuildPostOK) SetID(val uuid.UUID) {
	s.ID = val
}

func (*APIBookRebuildPostOK) aPIBookRebuildPostRes() {}

type APIBookRebuildPostReq struct {
	OldBook BookRaw `json:"old_book"`
	// Список страниц из старой книги.
	SelectedPages []int `json:"selected_pages"`
	// ID книги в которую надо добавить страницы.
	MergeWithBook OptUUID                       `json:"merge_with_book"`
	Flags         OptAPIBookRebuildPostReqFlags `json:"flags"`
}

// GetOldBook returns the value of OldBook.
func (s *APIBookRebuildPostReq) GetOldBook() BookRaw {
	return s.OldBook
}

// GetSelectedPages returns the value of SelectedPages.
func (s *APIBookRebuildPostReq) GetSelectedPages() []int {
	return s.SelectedPages
}

// GetMergeWithBook returns the value of MergeWithBook.
func (s *APIBookRebuildPostReq) GetMergeWithBook() OptUUID {
	return s.MergeWithBook
}

// GetFlags returns the value of Flags.
func (s *APIBookRebuildPostReq) GetFlags() OptAPIBookRebuildPostReqFlags {
	return s.Flags
}

// SetOldBook sets the value of OldBook.
func (s *APIBookRebuildPostReq) SetOldBook(val BookRaw) {
	s.OldBook = val
}

// SetSelectedPages sets the value of SelectedPages.
func (s *APIBookRebuildPostReq) SetSelectedPages(val []int) {
	s.SelectedPages = val
}

// SetMergeWithBook sets the value of MergeWithBook.
func (s *APIBookRebuildPostReq) SetMergeWithBook(val OptUUID) {
	s.MergeWithBook = val
}

// SetFlags sets the value of Flags.
func (s *APIBookRebuildPostReq) SetFlags(val OptAPIBookRebuildPostReqFlags) {
	s.Flags = val
}

type APIBookRebuildPostReqFlags struct {
	// Включать только уникальные страницы.
	OnlyUnique OptBool `json:"only_unique"`
	// Исключить страницы с мертвыми хешами.
	ExcludeDeadHashPages OptBool `json:"exclude_dead_hash_pages"`
	// Включать только уникальные страницы не содержащиеся
	// в других книгах.
	Only1Copy OptBool `json:"only_1_copy"`
	// Проставить каждой страницы метки об оригинальной
	// книге если ее нет.
	SetOriginLabels OptBool `json:"set_origin_labels"`
	// Режим экстракции - вынос страниц в новую книгу с
	// удалением их только из исходной.
	ExtractMode OptBool `json:"extract_mode"`
	// Отметить страницы что не вошли в ребилд как мертвый
	// хеш.
	MarkUnusedPagesAsDeadHash OptBool `json:"mark_unused_pages_as_dead_hash"`
	// Удалить страницы что не вошли в ребилд и их копии в
	// системе.
	MarkUnusedPagesAsDeleted OptBool `json:"mark_unused_pages_as_deleted"`
	// Отметить удаленным книги что остались без страниц
	// после их удаления.
	MarkEmptyBookAsDeletedAfterRemovePages OptBool `json:"mark_empty_book_as_deleted_after_remove_pages"`
}

// GetOnlyUnique returns the value of OnlyUnique.
func (s *APIBookRebuildPostReqFlags) GetOnlyUnique() OptBool {
	return s.OnlyUnique
}

// GetExcludeDeadHashPages returns the value of ExcludeDeadHashPages.
func (s *APIBookRebuildPostReqFlags) GetExcludeDeadHashPages() OptBool {
	return s.ExcludeDeadHashPages
}

// GetOnly1Copy returns the value of Only1Copy.
func (s *APIBookRebuildPostReqFlags) GetOnly1Copy() OptBool {
	return s.Only1Copy
}

// GetSetOriginLabels returns the value of SetOriginLabels.
func (s *APIBookRebuildPostReqFlags) GetSetOriginLabels() OptBool {
	return s.SetOriginLabels
}

// GetExtractMode returns the value of ExtractMode.
func (s *APIBookRebuildPostReqFlags) GetExtractMode() OptBool {
	return s.ExtractMode
}

// GetMarkUnusedPagesAsDeadHash returns the value of MarkUnusedPagesAsDeadHash.
func (s *APIBookRebuildPostReqFlags) GetMarkUnusedPagesAsDeadHash() OptBool {
	return s.MarkUnusedPagesAsDeadHash
}

// GetMarkUnusedPagesAsDeleted returns the value of MarkUnusedPagesAsDeleted.
func (s *APIBookRebuildPostReqFlags) GetMarkUnusedPagesAsDeleted() OptBool {
	return s.MarkUnusedPagesAsDeleted
}

// GetMarkEmptyBookAsDeletedAfterRemovePages returns the value of MarkEmptyBookAsDeletedAfterRemovePages.
func (s *APIBookRebuildPostReqFlags) GetMarkEmptyBookAsDeletedAfterRemovePages() OptBool {
	return s.MarkEmptyBookAsDeletedAfterRemovePages
}

// SetOnlyUnique sets the value of OnlyUnique.
func (s *APIBookRebuildPostReqFlags) SetOnlyUnique(val OptBool) {
	s.OnlyUnique = val
}

// SetExcludeDeadHashPages sets the value of ExcludeDeadHashPages.
func (s *APIBookRebuildPostReqFlags) SetExcludeDeadHashPages(val OptBool) {
	s.ExcludeDeadHashPages = val
}

// SetOnly1Copy sets the value of Only1Copy.
func (s *APIBookRebuildPostReqFlags) SetOnly1Copy(val OptBool) {
	s.Only1Copy = val
}

// SetSetOriginLabels sets the value of SetOriginLabels.
func (s *APIBookRebuildPostReqFlags) SetSetOriginLabels(val OptBool) {
	s.SetOriginLabels = val
}

// SetExtractMode sets the value of ExtractMode.
func (s *APIBookRebuildPostReqFlags) SetExtractMode(val OptBool) {
	s.ExtractMode = val
}

// SetMarkUnusedPagesAsDeadHash sets the value of MarkUnusedPagesAsDeadHash.
func (s *APIBookRebuildPostReqFlags) SetMarkUnusedPagesAsDeadHash(val OptBool) {
	s.MarkUnusedPagesAsDeadHash = val
}

// SetMarkUnusedPagesAsDeleted sets the value of MarkUnusedPagesAsDeleted.
func (s *APIBookRebuildPostReqFlags) SetMarkUnusedPagesAsDeleted(val OptBool) {
	s.MarkUnusedPagesAsDeleted = val
}

// SetMarkEmptyBookAsDeletedAfterRemovePages sets the value of MarkEmptyBookAsDeletedAfterRemovePages.
func (s *APIBookRebuildPostReqFlags) SetMarkEmptyBookAsDeletedAfterRemovePages(val OptBool) {
	s.MarkEmptyBookAsDeletedAfterRemovePages = val
}

type APIBookRebuildPostUnauthorized ErrorResponse

func (*APIBookRebuildPostUnauthorized) aPIBookRebuildPostRes() {}

type APIBookRestorePostBadRequest ErrorResponse

func (*APIBookRestorePostBadRequest) aPIBookRestorePostRes() {}

type APIBookRestorePostForbidden ErrorResponse

func (*APIBookRestorePostForbidden) aPIBookRestorePostRes() {}

type APIBookRestorePostInternalServerError ErrorResponse

func (*APIBookRestorePostInternalServerError) aPIBookRestorePostRes() {}

// APIBookRestorePostNoContent is response for APIBookRestorePost operation.
type APIBookRestorePostNoContent struct{}

func (*APIBookRestorePostNoContent) aPIBookRestorePostRes() {}

type APIBookRestorePostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
	// Восстановить только страницы.
	OnlyPages OptBool `json:"only_pages"`
}

// GetBookID returns the value of BookID.
func (s *APIBookRestorePostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// GetOnlyPages returns the value of OnlyPages.
func (s *APIBookRestorePostReq) GetOnlyPages() OptBool {
	return s.OnlyPages
}

// SetBookID sets the value of BookID.
func (s *APIBookRestorePostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetOnlyPages sets the value of OnlyPages.
func (s *APIBookRestorePostReq) SetOnlyPages(val OptBool) {
	s.OnlyPages = val
}

type APIBookRestorePostUnauthorized ErrorResponse

func (*APIBookRestorePostUnauthorized) aPIBookRestorePostRes() {}

type APIBookUpdatePostBadRequest ErrorResponse

func (*APIBookUpdatePostBadRequest) aPIBookUpdatePostRes() {}

type APIBookUpdatePostForbidden ErrorResponse

func (*APIBookUpdatePostForbidden) aPIBookUpdatePostRes() {}

type APIBookUpdatePostInternalServerError ErrorResponse

func (*APIBookUpdatePostInternalServerError) aPIBookUpdatePostRes() {}

// APIBookUpdatePostNoContent is response for APIBookUpdatePost operation.
type APIBookUpdatePostNoContent struct{}

func (*APIBookUpdatePostNoContent) aPIBookUpdatePostRes() {}

type APIBookUpdatePostNotFound ErrorResponse

func (*APIBookUpdatePostNotFound) aPIBookUpdatePostRes() {}

type APIBookUpdatePostUnauthorized ErrorResponse

func (*APIBookUpdatePostUnauthorized) aPIBookUpdatePostRes() {}

type APIBookVerifyPostBadRequest ErrorResponse

func (*APIBookVerifyPostBadRequest) aPIBookVerifyPostRes() {}

type APIBookVerifyPostForbidden ErrorResponse

func (*APIBookVerifyPostForbidden) aPIBookVerifyPostRes() {}

type APIBookVerifyPostInternalServerError ErrorResponse

func (*APIBookVerifyPostInternalServerError) aPIBookVerifyPostRes() {}

// APIBookVerifyPostNoContent is response for APIBookVerifyPost operation.
type APIBookVerifyPostNoContent struct{}

func (*APIBookVerifyPostNoContent) aPIBookVerifyPostRes() {}

type APIBookVerifyPostNotFound ErrorResponse

func (*APIBookVerifyPostNotFound) aPIBookVerifyPostRes() {}

type APIBookVerifyPostReq struct {
	// ID книги.
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *APIBookVerifyPostReq) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *APIBookVerifyPostReq) SetID(val uuid.UUID) {
	s.ID = val
}

type APIBookVerifyPostUnauthorized ErrorResponse

func (*APIBookVerifyPostUnauthorized) aPIBookVerifyPostRes() {}

type APIDeduplicateBookByPageBodyPostBadRequest ErrorResponse

func (*APIDeduplicateBookByPageBodyPostBadRequest) aPIDeduplicateBookByPageBodyPostRes() {}

type APIDeduplicateBookByPageBodyPostForbidden ErrorResponse

func (*APIDeduplicateBookByPageBodyPostForbidden) aPIDeduplicateBookByPageBodyPostRes() {}

type APIDeduplicateBookByPageBodyPostInternalServerError ErrorResponse

func (*APIDeduplicateBookByPageBodyPostInternalServerError) aPIDeduplicateBookByPageBodyPostRes() {}

type APIDeduplicateBookByPageBodyPostOK struct {
	Result []APIDeduplicateBookByPageBodyPostOKResultItem `json:"result"`
}

// GetResult returns the value of Result.
func (s *APIDeduplicateBookByPageBodyPostOK) GetResult() []APIDeduplicateBookByPageBodyPostOKResultItem {
	return s.Result
}

// SetResult sets the value of Result.
func (s *APIDeduplicateBookByPageBodyPostOK) SetResult(val []APIDeduplicateBookByPageBodyPostOKResultItem) {
	s.Result = val
}

func (*APIDeduplicateBookByPageBodyPostOK) aPIDeduplicateBookByPageBodyPostRes() {}

type APIDeduplicateBookByPageBodyPostOKResultItem struct {
	Book BookSimple `json:"book"`
	// Процент (0-1) покрытия оригинала в книге.
	OriginCoveredTarget float64 `json:"origin_covered_target"`
	// Процент (0-1) покрытия книги в оригинале.
	TargetCoveredOrigin float64 `json:"target_covered_origin"`
	// Процент (0-1) покрытия оригинала в книге без учета
	// мертвых хешей.
	OriginCoveredTargetWithoutDeadHashes float64 `json:"origin_covered_target_without_dead_hashes"`
	// Процент (0-1) покрытия книги в оригинале без учета
	// мертвых хешей.
	TargetCoveredOriginWithoutDeadHashes float64 `json:"target_covered_origin_without_dead_hashes"`
}

// GetBook returns the value of Book.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) GetBook() BookSimple {
	return s.Book
}

// GetOriginCoveredTarget returns the value of OriginCoveredTarget.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) GetOriginCoveredTarget() float64 {
	return s.OriginCoveredTarget
}

// GetTargetCoveredOrigin returns the value of TargetCoveredOrigin.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) GetTargetCoveredOrigin() float64 {
	return s.TargetCoveredOrigin
}

// GetOriginCoveredTargetWithoutDeadHashes returns the value of OriginCoveredTargetWithoutDeadHashes.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) GetOriginCoveredTargetWithoutDeadHashes() float64 {
	return s.OriginCoveredTargetWithoutDeadHashes
}

// GetTargetCoveredOriginWithoutDeadHashes returns the value of TargetCoveredOriginWithoutDeadHashes.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) GetTargetCoveredOriginWithoutDeadHashes() float64 {
	return s.TargetCoveredOriginWithoutDeadHashes
}

// SetBook sets the value of Book.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) SetBook(val BookSimple) {
	s.Book = val
}

// SetOriginCoveredTarget sets the value of OriginCoveredTarget.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) SetOriginCoveredTarget(val float64) {
	s.OriginCoveredTarget = val
}

// SetTargetCoveredOrigin sets the value of TargetCoveredOrigin.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) SetTargetCoveredOrigin(val float64) {
	s.TargetCoveredOrigin = val
}

// SetOriginCoveredTargetWithoutDeadHashes sets the value of OriginCoveredTargetWithoutDeadHashes.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) SetOriginCoveredTargetWithoutDeadHashes(val float64) {
	s.OriginCoveredTargetWithoutDeadHashes = val
}

// SetTargetCoveredOriginWithoutDeadHashes sets the value of TargetCoveredOriginWithoutDeadHashes.
func (s *APIDeduplicateBookByPageBodyPostOKResultItem) SetTargetCoveredOriginWithoutDeadHashes(val float64) {
	s.TargetCoveredOriginWithoutDeadHashes = val
}

type APIDeduplicateBookByPageBodyPostReq struct {
	// ID исходной книги.
	BookID uuid.UUID `json:"book_id"`
}

// GetBookID returns the value of BookID.
func (s *APIDeduplicateBookByPageBodyPostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// SetBookID sets the value of BookID.
func (s *APIDeduplicateBookByPageBodyPostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

type APIDeduplicateBookByPageBodyPostUnauthorized ErrorResponse

func (*APIDeduplicateBookByPageBodyPostUnauthorized) aPIDeduplicateBookByPageBodyPostRes() {}

type APIDeduplicateBooksByPagePostBadRequest ErrorResponse

func (*APIDeduplicateBooksByPagePostBadRequest) aPIDeduplicateBooksByPagePostRes() {}

type APIDeduplicateBooksByPagePostForbidden ErrorResponse

func (*APIDeduplicateBooksByPagePostForbidden) aPIDeduplicateBooksByPagePostRes() {}

type APIDeduplicateBooksByPagePostInternalServerError ErrorResponse

func (*APIDeduplicateBooksByPagePostInternalServerError) aPIDeduplicateBooksByPagePostRes() {}

type APIDeduplicateBooksByPagePostOK struct {
	Books []BookSimple `json:"books"`
}

// GetBooks returns the value of Books.
func (s *APIDeduplicateBooksByPagePostOK) GetBooks() []BookSimple {
	return s.Books
}

// SetBooks sets the value of Books.
func (s *APIDeduplicateBooksByPagePostOK) SetBooks(val []BookSimple) {
	s.Books = val
}

func (*APIDeduplicateBooksByPagePostOK) aPIDeduplicateBooksByPagePostRes() {}

type APIDeduplicateBooksByPagePostReq struct {
	// ID исходной книги.
	BookID uuid.UUID `json:"book_id"`
	// Номер страницы в исходной книге.
	PageNumber int `json:"page_number"`
}

// GetBookID returns the value of BookID.
func (s *APIDeduplicateBooksByPagePostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// GetPageNumber returns the value of PageNumber.
func (s *APIDeduplicateBooksByPagePostReq) GetPageNumber() int {
	return s.PageNumber
}

// SetBookID sets the value of BookID.
func (s *APIDeduplicateBooksByPagePostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetPageNumber sets the value of PageNumber.
func (s *APIDeduplicateBooksByPagePostReq) SetPageNumber(val int) {
	s.PageNumber = val
}

type APIDeduplicateBooksByPagePostUnauthorized ErrorResponse

func (*APIDeduplicateBooksByPagePostUnauthorized) aPIDeduplicateBooksByPagePostRes() {}

type APIDeduplicateComparePostBadRequest ErrorResponse

func (*APIDeduplicateComparePostBadRequest) aPIDeduplicateComparePostRes() {}

type APIDeduplicateComparePostForbidden ErrorResponse

func (*APIDeduplicateComparePostForbidden) aPIDeduplicateComparePostRes() {}

type APIDeduplicateComparePostInternalServerError ErrorResponse

func (*APIDeduplicateComparePostInternalServerError) aPIDeduplicateComparePostRes() {}

type APIDeduplicateComparePostOK struct {
	// ID исходной книги.
	Origin BookSimple `json:"origin"`
	// ID целевой книги.
	Target BookSimple `json:"target"`
	// Страницы что есть только в оригинальной книге.
	OriginPages []PageSimple `json:"origin_pages"`
	// Страницы что есть в обоих книгах.
	BothPages []PageSimple `json:"both_pages"`
	// Страницы что есть только в целевой книге.
	TargetPages []PageSimple `json:"target_pages"`
	// Атрибуты что есть только в оригинальной книге.
	OriginAttributes []BookAttribute `json:"origin_attributes"`
	// Атрибуты что есть в обоих книгах.
	BothAttributes []BookAttribute `json:"both_attributes"`
	// Атрибуты что есть только в целевой книге.
	TargetAttributes []BookAttribute `json:"target_attributes"`
	// Процент (0-1) покрытия оригинала в книге.
	OriginCoveredTarget float64 `json:"origin_covered_target"`
	// Процент (0-1) покрытия книги в оригинале.
	TargetCoveredOrigin float64 `json:"target_covered_origin"`
	// Процент (0-1) покрытия оригинала в книге без учета
	// мертвых хешей.
	OriginCoveredTargetWithoutDeadHashes float64 `json:"origin_covered_target_without_dead_hashes"`
	// Процент (0-1) покрытия книги в оригинале без учета
	// мертвых хешей.
	TargetCoveredOriginWithoutDeadHashes float64 `json:"target_covered_origin_without_dead_hashes"`
}

// GetOrigin returns the value of Origin.
func (s *APIDeduplicateComparePostOK) GetOrigin() BookSimple {
	return s.Origin
}

// GetTarget returns the value of Target.
func (s *APIDeduplicateComparePostOK) GetTarget() BookSimple {
	return s.Target
}

// GetOriginPages returns the value of OriginPages.
func (s *APIDeduplicateComparePostOK) GetOriginPages() []PageSimple {
	return s.OriginPages
}

// GetBothPages returns the value of BothPages.
func (s *APIDeduplicateComparePostOK) GetBothPages() []PageSimple {
	return s.BothPages
}

// GetTargetPages returns the value of TargetPages.
func (s *APIDeduplicateComparePostOK) GetTargetPages() []PageSimple {
	return s.TargetPages
}

// GetOriginAttributes returns the value of OriginAttributes.
func (s *APIDeduplicateComparePostOK) GetOriginAttributes() []BookAttribute {
	return s.OriginAttributes
}

// GetBothAttributes returns the value of BothAttributes.
func (s *APIDeduplicateComparePostOK) GetBothAttributes() []BookAttribute {
	return s.BothAttributes
}

// GetTargetAttributes returns the value of TargetAttributes.
func (s *APIDeduplicateComparePostOK) GetTargetAttributes() []BookAttribute {
	return s.TargetAttributes
}

// GetOriginCoveredTarget returns the value of OriginCoveredTarget.
func (s *APIDeduplicateComparePostOK) GetOriginCoveredTarget() float64 {
	return s.OriginCoveredTarget
}

// GetTargetCoveredOrigin returns the value of TargetCoveredOrigin.
func (s *APIDeduplicateComparePostOK) GetTargetCoveredOrigin() float64 {
	return s.TargetCoveredOrigin
}

// GetOriginCoveredTargetWithoutDeadHashes returns the value of OriginCoveredTargetWithoutDeadHashes.
func (s *APIDeduplicateComparePostOK) GetOriginCoveredTargetWithoutDeadHashes() float64 {
	return s.OriginCoveredTargetWithoutDeadHashes
}

// GetTargetCoveredOriginWithoutDeadHashes returns the value of TargetCoveredOriginWithoutDeadHashes.
func (s *APIDeduplicateComparePostOK) GetTargetCoveredOriginWithoutDeadHashes() float64 {
	return s.TargetCoveredOriginWithoutDeadHashes
}

// SetOrigin sets the value of Origin.
func (s *APIDeduplicateComparePostOK) SetOrigin(val BookSimple) {
	s.Origin = val
}

// SetTarget sets the value of Target.
func (s *APIDeduplicateComparePostOK) SetTarget(val BookSimple) {
	s.Target = val
}

// SetOriginPages sets the value of OriginPages.
func (s *APIDeduplicateComparePostOK) SetOriginPages(val []PageSimple) {
	s.OriginPages = val
}

// SetBothPages sets the value of BothPages.
func (s *APIDeduplicateComparePostOK) SetBothPages(val []PageSimple) {
	s.BothPages = val
}

// SetTargetPages sets the value of TargetPages.
func (s *APIDeduplicateComparePostOK) SetTargetPages(val []PageSimple) {
	s.TargetPages = val
}

// SetOriginAttributes sets the value of OriginAttributes.
func (s *APIDeduplicateComparePostOK) SetOriginAttributes(val []BookAttribute) {
	s.OriginAttributes = val
}

// SetBothAttributes sets the value of BothAttributes.
func (s *APIDeduplicateComparePostOK) SetBothAttributes(val []BookAttribute) {
	s.BothAttributes = val
}

// SetTargetAttributes sets the value of TargetAttributes.
func (s *APIDeduplicateComparePostOK) SetTargetAttributes(val []BookAttribute) {
	s.TargetAttributes = val
}

// SetOriginCoveredTarget sets the value of OriginCoveredTarget.
func (s *APIDeduplicateComparePostOK) SetOriginCoveredTarget(val float64) {
	s.OriginCoveredTarget = val
}

// SetTargetCoveredOrigin sets the value of TargetCoveredOrigin.
func (s *APIDeduplicateComparePostOK) SetTargetCoveredOrigin(val float64) {
	s.TargetCoveredOrigin = val
}

// SetOriginCoveredTargetWithoutDeadHashes sets the value of OriginCoveredTargetWithoutDeadHashes.
func (s *APIDeduplicateComparePostOK) SetOriginCoveredTargetWithoutDeadHashes(val float64) {
	s.OriginCoveredTargetWithoutDeadHashes = val
}

// SetTargetCoveredOriginWithoutDeadHashes sets the value of TargetCoveredOriginWithoutDeadHashes.
func (s *APIDeduplicateComparePostOK) SetTargetCoveredOriginWithoutDeadHashes(val float64) {
	s.TargetCoveredOriginWithoutDeadHashes = val
}

func (*APIDeduplicateComparePostOK) aPIDeduplicateComparePostRes() {}

type APIDeduplicateComparePostReq struct {
	// ID исходной книги.
	OriginBookID uuid.UUID `json:"origin_book_id"`
	// ID целевой книги.
	TargetBookID uuid.UUID `json:"target_book_id"`
}

// GetOriginBookID returns the value of OriginBookID.
func (s *APIDeduplicateComparePostReq) GetOriginBookID() uuid.UUID {
	return s.OriginBookID
}

// GetTargetBookID returns the value of TargetBookID.
func (s *APIDeduplicateComparePostReq) GetTargetBookID() uuid.UUID {
	return s.TargetBookID
}

// SetOriginBookID sets the value of OriginBookID.
func (s *APIDeduplicateComparePostReq) SetOriginBookID(val uuid.UUID) {
	s.OriginBookID = val
}

// SetTargetBookID sets the value of TargetBookID.
func (s *APIDeduplicateComparePostReq) SetTargetBookID(val uuid.UUID) {
	s.TargetBookID = val
}

type APIDeduplicateComparePostUnauthorized ErrorResponse

func (*APIDeduplicateComparePostUnauthorized) aPIDeduplicateComparePostRes() {}

type APIDeduplicateDeadHashByBookPagesCreatePostBadRequest ErrorResponse

func (*APIDeduplicateDeadHashByBookPagesCreatePostBadRequest) aPIDeduplicateDeadHashByBookPagesCreatePostRes() {
}

type APIDeduplicateDeadHashByBookPagesCreatePostForbidden ErrorResponse

func (*APIDeduplicateDeadHashByBookPagesCreatePostForbidden) aPIDeduplicateDeadHashByBookPagesCreatePostRes() {
}

type APIDeduplicateDeadHashByBookPagesCreatePostInternalServerError ErrorResponse

func (*APIDeduplicateDeadHashByBookPagesCreatePostInternalServerError) aPIDeduplicateDeadHashByBookPagesCreatePostRes() {
}

// APIDeduplicateDeadHashByBookPagesCreatePostNoContent is response for APIDeduplicateDeadHashByBookPagesCreatePost operation.
type APIDeduplicateDeadHashByBookPagesCreatePostNoContent struct{}

func (*APIDeduplicateDeadHashByBookPagesCreatePostNoContent) aPIDeduplicateDeadHashByBookPagesCreatePostRes() {
}

type APIDeduplicateDeadHashByBookPagesCreatePostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
}

// GetBookID returns the value of BookID.
func (s *APIDeduplicateDeadHashByBookPagesCreatePostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// SetBookID sets the value of BookID.
func (s *APIDeduplicateDeadHashByBookPagesCreatePostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

type APIDeduplicateDeadHashByBookPagesCreatePostUnauthorized ErrorResponse

func (*APIDeduplicateDeadHashByBookPagesCreatePostUnauthorized) aPIDeduplicateDeadHashByBookPagesCreatePostRes() {
}

type APIDeduplicateDeadHashByBookPagesDeletePostBadRequest ErrorResponse

func (*APIDeduplicateDeadHashByBookPagesDeletePostBadRequest) aPIDeduplicateDeadHashByBookPagesDeletePostRes() {
}

type APIDeduplicateDeadHashByBookPagesDeletePostForbidden ErrorResponse

func (*APIDeduplicateDeadHashByBookPagesDeletePostForbidden) aPIDeduplicateDeadHashByBookPagesDeletePostRes() {
}

type APIDeduplicateDeadHashByBookPagesDeletePostInternalServerError ErrorResponse

func (*APIDeduplicateDeadHashByBookPagesDeletePostInternalServerError) aPIDeduplicateDeadHashByBookPagesDeletePostRes() {
}

// APIDeduplicateDeadHashByBookPagesDeletePostNoContent is response for APIDeduplicateDeadHashByBookPagesDeletePost operation.
type APIDeduplicateDeadHashByBookPagesDeletePostNoContent struct{}

func (*APIDeduplicateDeadHashByBookPagesDeletePostNoContent) aPIDeduplicateDeadHashByBookPagesDeletePostRes() {
}

type APIDeduplicateDeadHashByBookPagesDeletePostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
}

// GetBookID returns the value of BookID.
func (s *APIDeduplicateDeadHashByBookPagesDeletePostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// SetBookID sets the value of BookID.
func (s *APIDeduplicateDeadHashByBookPagesDeletePostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

type APIDeduplicateDeadHashByBookPagesDeletePostUnauthorized ErrorResponse

func (*APIDeduplicateDeadHashByBookPagesDeletePostUnauthorized) aPIDeduplicateDeadHashByBookPagesDeletePostRes() {
}

type APIDeduplicateDeadHashByPageCreatePostBadRequest ErrorResponse

func (*APIDeduplicateDeadHashByPageCreatePostBadRequest) aPIDeduplicateDeadHashByPageCreatePostRes() {
}

type APIDeduplicateDeadHashByPageCreatePostForbidden ErrorResponse

func (*APIDeduplicateDeadHashByPageCreatePostForbidden) aPIDeduplicateDeadHashByPageCreatePostRes() {}

type APIDeduplicateDeadHashByPageCreatePostInternalServerError ErrorResponse

func (*APIDeduplicateDeadHashByPageCreatePostInternalServerError) aPIDeduplicateDeadHashByPageCreatePostRes() {
}

// APIDeduplicateDeadHashByPageCreatePostNoContent is response for APIDeduplicateDeadHashByPageCreatePost operation.
type APIDeduplicateDeadHashByPageCreatePostNoContent struct{}

func (*APIDeduplicateDeadHashByPageCreatePostNoContent) aPIDeduplicateDeadHashByPageCreatePostRes() {}

type APIDeduplicateDeadHashByPageCreatePostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
	// Номер страницы в книге.
	PageNumber int `json:"page_number"`
}

// GetBookID returns the value of BookID.
func (s *APIDeduplicateDeadHashByPageCreatePostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// GetPageNumber returns the value of PageNumber.
func (s *APIDeduplicateDeadHashByPageCreatePostReq) GetPageNumber() int {
	return s.PageNumber
}

// SetBookID sets the value of BookID.
func (s *APIDeduplicateDeadHashByPageCreatePostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetPageNumber sets the value of PageNumber.
func (s *APIDeduplicateDeadHashByPageCreatePostReq) SetPageNumber(val int) {
	s.PageNumber = val
}

type APIDeduplicateDeadHashByPageCreatePostUnauthorized ErrorResponse

func (*APIDeduplicateDeadHashByPageCreatePostUnauthorized) aPIDeduplicateDeadHashByPageCreatePostRes() {
}

type APIDeduplicateDeadHashByPageDeletePostBadRequest ErrorResponse

func (*APIDeduplicateDeadHashByPageDeletePostBadRequest) aPIDeduplicateDeadHashByPageDeletePostRes() {
}

type APIDeduplicateDeadHashByPageDeletePostForbidden ErrorResponse

func (*APIDeduplicateDeadHashByPageDeletePostForbidden) aPIDeduplicateDeadHashByPageDeletePostRes() {}

type APIDeduplicateDeadHashByPageDeletePostInternalServerError ErrorResponse

func (*APIDeduplicateDeadHashByPageDeletePostInternalServerError) aPIDeduplicateDeadHashByPageDeletePostRes() {
}

// APIDeduplicateDeadHashByPageDeletePostNoContent is response for APIDeduplicateDeadHashByPageDeletePost operation.
type APIDeduplicateDeadHashByPageDeletePostNoContent struct{}

func (*APIDeduplicateDeadHashByPageDeletePostNoContent) aPIDeduplicateDeadHashByPageDeletePostRes() {}

type APIDeduplicateDeadHashByPageDeletePostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
	// Номер страницы в книге.
	PageNumber int `json:"page_number"`
}

// GetBookID returns the value of BookID.
func (s *APIDeduplicateDeadHashByPageDeletePostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// GetPageNumber returns the value of PageNumber.
func (s *APIDeduplicateDeadHashByPageDeletePostReq) GetPageNumber() int {
	return s.PageNumber
}

// SetBookID sets the value of BookID.
func (s *APIDeduplicateDeadHashByPageDeletePostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetPageNumber sets the value of PageNumber.
func (s *APIDeduplicateDeadHashByPageDeletePostReq) SetPageNumber(val int) {
	s.PageNumber = val
}

type APIDeduplicateDeadHashByPageDeletePostUnauthorized ErrorResponse

func (*APIDeduplicateDeadHashByPageDeletePostUnauthorized) aPIDeduplicateDeadHashByPageDeletePostRes() {
}

type APIDeduplicateDeleteAllPagesByBookPostBadRequest ErrorResponse

func (*APIDeduplicateDeleteAllPagesByBookPostBadRequest) aPIDeduplicateDeleteAllPagesByBookPostRes() {
}

type APIDeduplicateDeleteAllPagesByBookPostForbidden ErrorResponse

func (*APIDeduplicateDeleteAllPagesByBookPostForbidden) aPIDeduplicateDeleteAllPagesByBookPostRes() {}

type APIDeduplicateDeleteAllPagesByBookPostInternalServerError ErrorResponse

func (*APIDeduplicateDeleteAllPagesByBookPostInternalServerError) aPIDeduplicateDeleteAllPagesByBookPostRes() {
}

// APIDeduplicateDeleteAllPagesByBookPostNoContent is response for APIDeduplicateDeleteAllPagesByBookPost operation.
type APIDeduplicateDeleteAllPagesByBookPostNoContent struct{}

func (*APIDeduplicateDeleteAllPagesByBookPostNoContent) aPIDeduplicateDeleteAllPagesByBookPostRes() {}

type APIDeduplicateDeleteAllPagesByBookPostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
	// Пометить пустые книги которые появились после
	// операции как удаленные.
	MarkAsDeletedEmptyBook OptBool `json:"mark_as_deleted_empty_book"`
}

// GetBookID returns the value of BookID.
func (s *APIDeduplicateDeleteAllPagesByBookPostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// GetMarkAsDeletedEmptyBook returns the value of MarkAsDeletedEmptyBook.
func (s *APIDeduplicateDeleteAllPagesByBookPostReq) GetMarkAsDeletedEmptyBook() OptBool {
	return s.MarkAsDeletedEmptyBook
}

// SetBookID sets the value of BookID.
func (s *APIDeduplicateDeleteAllPagesByBookPostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetMarkAsDeletedEmptyBook sets the value of MarkAsDeletedEmptyBook.
func (s *APIDeduplicateDeleteAllPagesByBookPostReq) SetMarkAsDeletedEmptyBook(val OptBool) {
	s.MarkAsDeletedEmptyBook = val
}

type APIDeduplicateDeleteAllPagesByBookPostUnauthorized ErrorResponse

func (*APIDeduplicateDeleteAllPagesByBookPostUnauthorized) aPIDeduplicateDeleteAllPagesByBookPostRes() {
}

type APIDeduplicateDeleteAllPagesByHashPostBadRequest ErrorResponse

func (*APIDeduplicateDeleteAllPagesByHashPostBadRequest) aPIDeduplicateDeleteAllPagesByHashPostRes() {
}

type APIDeduplicateDeleteAllPagesByHashPostForbidden ErrorResponse

func (*APIDeduplicateDeleteAllPagesByHashPostForbidden) aPIDeduplicateDeleteAllPagesByHashPostRes() {}

type APIDeduplicateDeleteAllPagesByHashPostInternalServerError ErrorResponse

func (*APIDeduplicateDeleteAllPagesByHashPostInternalServerError) aPIDeduplicateDeleteAllPagesByHashPostRes() {
}

// APIDeduplicateDeleteAllPagesByHashPostNoContent is response for APIDeduplicateDeleteAllPagesByHashPost operation.
type APIDeduplicateDeleteAllPagesByHashPostNoContent struct{}

func (*APIDeduplicateDeleteAllPagesByHashPostNoContent) aPIDeduplicateDeleteAllPagesByHashPostRes() {}

type APIDeduplicateDeleteAllPagesByHashPostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
	// Номер страницы в книге.
	PageNumber int `json:"page_number"`
	// Проставить мертвый хеш по той же странице.
	SetDeadHash OptBool `json:"set_dead_hash"`
}

// GetBookID returns the value of BookID.
func (s *APIDeduplicateDeleteAllPagesByHashPostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// GetPageNumber returns the value of PageNumber.
func (s *APIDeduplicateDeleteAllPagesByHashPostReq) GetPageNumber() int {
	return s.PageNumber
}

// GetSetDeadHash returns the value of SetDeadHash.
func (s *APIDeduplicateDeleteAllPagesByHashPostReq) GetSetDeadHash() OptBool {
	return s.SetDeadHash
}

// SetBookID sets the value of BookID.
func (s *APIDeduplicateDeleteAllPagesByHashPostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetPageNumber sets the value of PageNumber.
func (s *APIDeduplicateDeleteAllPagesByHashPostReq) SetPageNumber(val int) {
	s.PageNumber = val
}

// SetSetDeadHash sets the value of SetDeadHash.
func (s *APIDeduplicateDeleteAllPagesByHashPostReq) SetSetDeadHash(val OptBool) {
	s.SetDeadHash = val
}

type APIDeduplicateDeleteAllPagesByHashPostUnauthorized ErrorResponse

func (*APIDeduplicateDeleteAllPagesByHashPostUnauthorized) aPIDeduplicateDeleteAllPagesByHashPostRes() {
}

type APIDeduplicateUniquePagesPostBadRequest ErrorResponse

func (*APIDeduplicateUniquePagesPostBadRequest) aPIDeduplicateUniquePagesPostRes() {}

type APIDeduplicateUniquePagesPostForbidden ErrorResponse

func (*APIDeduplicateUniquePagesPostForbidden) aPIDeduplicateUniquePagesPostRes() {}

type APIDeduplicateUniquePagesPostInternalServerError ErrorResponse

func (*APIDeduplicateUniquePagesPostInternalServerError) aPIDeduplicateUniquePagesPostRes() {}

type APIDeduplicateUniquePagesPostOK struct {
	// Уникальные страницы в книге.
	Pages []PageSimple `json:"pages"`
}

// GetPages returns the value of Pages.
func (s *APIDeduplicateUniquePagesPostOK) GetPages() []PageSimple {
	return s.Pages
}

// SetPages sets the value of Pages.
func (s *APIDeduplicateUniquePagesPostOK) SetPages(val []PageSimple) {
	s.Pages = val
}

func (*APIDeduplicateUniquePagesPostOK) aPIDeduplicateUniquePagesPostRes() {}

type APIDeduplicateUniquePagesPostReq struct {
	// ID исходной книги.
	BookID uuid.UUID `json:"book_id"`
}

// GetBookID returns the value of BookID.
func (s *APIDeduplicateUniquePagesPostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// SetBookID sets the value of BookID.
func (s *APIDeduplicateUniquePagesPostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

type APIDeduplicateUniquePagesPostUnauthorized ErrorResponse

func (*APIDeduplicateUniquePagesPostUnauthorized) aPIDeduplicateUniquePagesPostRes() {}

type APIFileIDGetBadRequest ErrorResponse

func (*APIFileIDGetBadRequest) aPIFileIDGetRes() {}

type APIFileIDGetForbidden ErrorResponse

func (*APIFileIDGetForbidden) aPIFileIDGetRes() {}

type APIFileIDGetInternalServerError ErrorResponse

func (*APIFileIDGetInternalServerError) aPIFileIDGetRes() {}

type APIFileIDGetNotFound ErrorResponse

func (*APIFileIDGetNotFound) aPIFileIDGetRes() {}

type APIFileIDGetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s APIFileIDGetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

// APIFileIDGetOKHeaders wraps APIFileIDGetOK with response headers.
type APIFileIDGetOKHeaders struct {
	ContentType string
	Response    APIFileIDGetOK
}

// GetContentType returns the value of ContentType.
func (s *APIFileIDGetOKHeaders) GetContentType() string {
	return s.ContentType
}

// GetResponse returns the value of Response.
func (s *APIFileIDGetOKHeaders) GetResponse() APIFileIDGetOK {
	return s.Response
}

// SetContentType sets the value of ContentType.
func (s *APIFileIDGetOKHeaders) SetContentType(val string) {
	s.ContentType = val
}

// SetResponse sets the value of Response.
func (s *APIFileIDGetOKHeaders) SetResponse(val APIFileIDGetOK) {
	s.Response = val
}

func (*APIFileIDGetOKHeaders) aPIFileIDGetRes() {}

type APIFileIDGetUnauthorized ErrorResponse

func (*APIFileIDGetUnauthorized) aPIFileIDGetRes() {}

type APILabelDeletePostBadRequest ErrorResponse

func (*APILabelDeletePostBadRequest) aPILabelDeletePostRes() {}

type APILabelDeletePostForbidden ErrorResponse

func (*APILabelDeletePostForbidden) aPILabelDeletePostRes() {}

type APILabelDeletePostInternalServerError ErrorResponse

func (*APILabelDeletePostInternalServerError) aPILabelDeletePostRes() {}

// APILabelDeletePostNoContent is response for APILabelDeletePost operation.
type APILabelDeletePostNoContent struct{}

func (*APILabelDeletePostNoContent) aPILabelDeletePostRes() {}

type APILabelDeletePostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
	// Номер страницы, если нет метка удаляется у книги.
	PageNumber OptInt `json:"page_number"`
	// Название метки (ее код).
	Name string `json:"name"`
}

// GetBookID returns the value of BookID.
func (s *APILabelDeletePostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// GetPageNumber returns the value of PageNumber.
func (s *APILabelDeletePostReq) GetPageNumber() OptInt {
	return s.PageNumber
}

// GetName returns the value of Name.
func (s *APILabelDeletePostReq) GetName() string {
	return s.Name
}

// SetBookID sets the value of BookID.
func (s *APILabelDeletePostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetPageNumber sets the value of PageNumber.
func (s *APILabelDeletePostReq) SetPageNumber(val OptInt) {
	s.PageNumber = val
}

// SetName sets the value of Name.
func (s *APILabelDeletePostReq) SetName(val string) {
	s.Name = val
}

type APILabelDeletePostUnauthorized ErrorResponse

func (*APILabelDeletePostUnauthorized) aPILabelDeletePostRes() {}

type APILabelGetPostBadRequest ErrorResponse

func (*APILabelGetPostBadRequest) aPILabelGetPostRes() {}

type APILabelGetPostForbidden ErrorResponse

func (*APILabelGetPostForbidden) aPILabelGetPostRes() {}

type APILabelGetPostInternalServerError ErrorResponse

func (*APILabelGetPostInternalServerError) aPILabelGetPostRes() {}

type APILabelGetPostOK struct {
	// Метки книги.
	Labels []APILabelGetPostOKLabelsItem `json:"labels"`
}

// GetLabels returns the value of Labels.
func (s *APILabelGetPostOK) GetLabels() []APILabelGetPostOKLabelsItem {
	return s.Labels
}

// SetLabels sets the value of Labels.
func (s *APILabelGetPostOK) SetLabels(val []APILabelGetPostOKLabelsItem) {
	s.Labels = val
}

func (*APILabelGetPostOK) aPILabelGetPostRes() {}

type APILabelGetPostOKLabelsItem struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
	// Номер страницы, если нет метка на всю книгу.
	PageNumber int `json:"page_number"`
	// Название метки (ее код).
	Name string `json:"name"`
	// Значение метки.
	Value string `json:"value"`
	// Время создания метки в системе.
	CreatedAt time.Time `json:"created_at"`
}

// GetBookID returns the value of BookID.
func (s *APILabelGetPostOKLabelsItem) GetBookID() uuid.UUID {
	return s.BookID
}

// GetPageNumber returns the value of PageNumber.
func (s *APILabelGetPostOKLabelsItem) GetPageNumber() int {
	return s.PageNumber
}

// GetName returns the value of Name.
func (s *APILabelGetPostOKLabelsItem) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *APILabelGetPostOKLabelsItem) GetValue() string {
	return s.Value
}

// GetCreatedAt returns the value of CreatedAt.
func (s *APILabelGetPostOKLabelsItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetBookID sets the value of BookID.
func (s *APILabelGetPostOKLabelsItem) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetPageNumber sets the value of PageNumber.
func (s *APILabelGetPostOKLabelsItem) SetPageNumber(val int) {
	s.PageNumber = val
}

// SetName sets the value of Name.
func (s *APILabelGetPostOKLabelsItem) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *APILabelGetPostOKLabelsItem) SetValue(val string) {
	s.Value = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *APILabelGetPostOKLabelsItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

type APILabelGetPostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
}

// GetBookID returns the value of BookID.
func (s *APILabelGetPostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// SetBookID sets the value of BookID.
func (s *APILabelGetPostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

type APILabelGetPostUnauthorized ErrorResponse

func (*APILabelGetPostUnauthorized) aPILabelGetPostRes() {}

type APILabelPresetCreatePostBadRequest ErrorResponse

func (*APILabelPresetCreatePostBadRequest) aPILabelPresetCreatePostRes() {}

type APILabelPresetCreatePostForbidden ErrorResponse

func (*APILabelPresetCreatePostForbidden) aPILabelPresetCreatePostRes() {}

type APILabelPresetCreatePostInternalServerError ErrorResponse

func (*APILabelPresetCreatePostInternalServerError) aPILabelPresetCreatePostRes() {}

// APILabelPresetCreatePostNoContent is response for APILabelPresetCreatePost operation.
type APILabelPresetCreatePostNoContent struct{}

func (*APILabelPresetCreatePostNoContent) aPILabelPresetCreatePostRes() {}

type APILabelPresetCreatePostReq struct {
	// Название метки (ее код).
	Name string `json:"name"`
	// Описание метки.
	Description OptString `json:"description"`
	// Значения метки.
	Values []string `json:"values"`
}

// GetName returns the value of Name.
func (s *APILabelPresetCreatePostReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *APILabelPresetCreatePostReq) GetDescription() OptString {
	return s.Description
}

// GetValues returns the value of Values.
func (s *APILabelPresetCreatePostReq) GetValues() []string {
	return s.Values
}

// SetName sets the value of Name.
func (s *APILabelPresetCreatePostReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *APILabelPresetCreatePostReq) SetDescription(val OptString) {
	s.Description = val
}

// SetValues sets the value of Values.
func (s *APILabelPresetCreatePostReq) SetValues(val []string) {
	s.Values = val
}

type APILabelPresetCreatePostUnauthorized ErrorResponse

func (*APILabelPresetCreatePostUnauthorized) aPILabelPresetCreatePostRes() {}

type APILabelPresetDeletePostBadRequest ErrorResponse

func (*APILabelPresetDeletePostBadRequest) aPILabelPresetDeletePostRes() {}

type APILabelPresetDeletePostForbidden ErrorResponse

func (*APILabelPresetDeletePostForbidden) aPILabelPresetDeletePostRes() {}

type APILabelPresetDeletePostInternalServerError ErrorResponse

func (*APILabelPresetDeletePostInternalServerError) aPILabelPresetDeletePostRes() {}

// APILabelPresetDeletePostNoContent is response for APILabelPresetDeletePost operation.
type APILabelPresetDeletePostNoContent struct{}

func (*APILabelPresetDeletePostNoContent) aPILabelPresetDeletePostRes() {}

type APILabelPresetDeletePostNotFound ErrorResponse

func (*APILabelPresetDeletePostNotFound) aPILabelPresetDeletePostRes() {}

type APILabelPresetDeletePostReq struct {
	// Название метки (ее код).
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *APILabelPresetDeletePostReq) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *APILabelPresetDeletePostReq) SetName(val string) {
	s.Name = val
}

type APILabelPresetDeletePostUnauthorized ErrorResponse

func (*APILabelPresetDeletePostUnauthorized) aPILabelPresetDeletePostRes() {}

type APILabelPresetGetPostForbidden ErrorResponse

func (*APILabelPresetGetPostForbidden) aPILabelPresetGetPostRes() {}

type APILabelPresetGetPostInternalServerError ErrorResponse

func (*APILabelPresetGetPostInternalServerError) aPILabelPresetGetPostRes() {}

type APILabelPresetGetPostNotFound ErrorResponse

func (*APILabelPresetGetPostNotFound) aPILabelPresetGetPostRes() {}

type APILabelPresetGetPostOK struct {
	// Название метки (ее код).
	Name string `json:"name"`
	// Описание метки.
	Description OptString `json:"description"`
	// Значения метки.
	Values []string `json:"values"`
	// Время создания в системе.
	CreatedAt time.Time `json:"created_at"`
	// Время обновления в системе.
	UpdatedAt OptDateTime `json:"updated_at"`
}

// GetName returns the value of Name.
func (s *APILabelPresetGetPostOK) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *APILabelPresetGetPostOK) GetDescription() OptString {
	return s.Description
}

// GetValues returns the value of Values.
func (s *APILabelPresetGetPostOK) GetValues() []string {
	return s.Values
}

// GetCreatedAt returns the value of CreatedAt.
func (s *APILabelPresetGetPostOK) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *APILabelPresetGetPostOK) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetName sets the value of Name.
func (s *APILabelPresetGetPostOK) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *APILabelPresetGetPostOK) SetDescription(val OptString) {
	s.Description = val
}

// SetValues sets the value of Values.
func (s *APILabelPresetGetPostOK) SetValues(val []string) {
	s.Values = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *APILabelPresetGetPostOK) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *APILabelPresetGetPostOK) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

func (*APILabelPresetGetPostOK) aPILabelPresetGetPostRes() {}

type APILabelPresetGetPostReq struct {
	// Название метки (ее код).
	Name string `json:"name"`
}

// GetName returns the value of Name.
func (s *APILabelPresetGetPostReq) GetName() string {
	return s.Name
}

// SetName sets the value of Name.
func (s *APILabelPresetGetPostReq) SetName(val string) {
	s.Name = val
}

type APILabelPresetGetPostUnauthorized ErrorResponse

func (*APILabelPresetGetPostUnauthorized) aPILabelPresetGetPostRes() {}

type APILabelPresetListGetForbidden ErrorResponse

func (*APILabelPresetListGetForbidden) aPILabelPresetListGetRes() {}

type APILabelPresetListGetInternalServerError ErrorResponse

func (*APILabelPresetListGetInternalServerError) aPILabelPresetListGetRes() {}

type APILabelPresetListGetOK struct {
	// Список пресетов.
	Presets []APILabelPresetListGetOKPresetsItem `json:"presets"`
}

// GetPresets returns the value of Presets.
func (s *APILabelPresetListGetOK) GetPresets() []APILabelPresetListGetOKPresetsItem {
	return s.Presets
}

// SetPresets sets the value of Presets.
func (s *APILabelPresetListGetOK) SetPresets(val []APILabelPresetListGetOKPresetsItem) {
	s.Presets = val
}

func (*APILabelPresetListGetOK) aPILabelPresetListGetRes() {}

type APILabelPresetListGetOKPresetsItem struct {
	// Название метки (ее код).
	Name string `json:"name"`
	// Описание метки.
	Description OptString `json:"description"`
	// Значения метки.
	Values []string `json:"values"`
	// Время создания в системе.
	CreatedAt time.Time `json:"created_at"`
	// Время обновления в системе.
	UpdatedAt OptDateTime `json:"updated_at"`
}

// GetName returns the value of Name.
func (s *APILabelPresetListGetOKPresetsItem) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *APILabelPresetListGetOKPresetsItem) GetDescription() OptString {
	return s.Description
}

// GetValues returns the value of Values.
func (s *APILabelPresetListGetOKPresetsItem) GetValues() []string {
	return s.Values
}

// GetCreatedAt returns the value of CreatedAt.
func (s *APILabelPresetListGetOKPresetsItem) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *APILabelPresetListGetOKPresetsItem) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// SetName sets the value of Name.
func (s *APILabelPresetListGetOKPresetsItem) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *APILabelPresetListGetOKPresetsItem) SetDescription(val OptString) {
	s.Description = val
}

// SetValues sets the value of Values.
func (s *APILabelPresetListGetOKPresetsItem) SetValues(val []string) {
	s.Values = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *APILabelPresetListGetOKPresetsItem) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *APILabelPresetListGetOKPresetsItem) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

type APILabelPresetListGetUnauthorized ErrorResponse

func (*APILabelPresetListGetUnauthorized) aPILabelPresetListGetRes() {}

type APILabelPresetUpdatePostBadRequest ErrorResponse

func (*APILabelPresetUpdatePostBadRequest) aPILabelPresetUpdatePostRes() {}

type APILabelPresetUpdatePostForbidden ErrorResponse

func (*APILabelPresetUpdatePostForbidden) aPILabelPresetUpdatePostRes() {}

type APILabelPresetUpdatePostInternalServerError ErrorResponse

func (*APILabelPresetUpdatePostInternalServerError) aPILabelPresetUpdatePostRes() {}

// APILabelPresetUpdatePostNoContent is response for APILabelPresetUpdatePost operation.
type APILabelPresetUpdatePostNoContent struct{}

func (*APILabelPresetUpdatePostNoContent) aPILabelPresetUpdatePostRes() {}

type APILabelPresetUpdatePostNotFound ErrorResponse

func (*APILabelPresetUpdatePostNotFound) aPILabelPresetUpdatePostRes() {}

type APILabelPresetUpdatePostReq struct {
	// Название метки (ее код).
	Name string `json:"name"`
	// Описание метки.
	Description OptString `json:"description"`
	// Значения метки.
	Values []string `json:"values"`
}

// GetName returns the value of Name.
func (s *APILabelPresetUpdatePostReq) GetName() string {
	return s.Name
}

// GetDescription returns the value of Description.
func (s *APILabelPresetUpdatePostReq) GetDescription() OptString {
	return s.Description
}

// GetValues returns the value of Values.
func (s *APILabelPresetUpdatePostReq) GetValues() []string {
	return s.Values
}

// SetName sets the value of Name.
func (s *APILabelPresetUpdatePostReq) SetName(val string) {
	s.Name = val
}

// SetDescription sets the value of Description.
func (s *APILabelPresetUpdatePostReq) SetDescription(val OptString) {
	s.Description = val
}

// SetValues sets the value of Values.
func (s *APILabelPresetUpdatePostReq) SetValues(val []string) {
	s.Values = val
}

type APILabelPresetUpdatePostUnauthorized ErrorResponse

func (*APILabelPresetUpdatePostUnauthorized) aPILabelPresetUpdatePostRes() {}

type APILabelSetPostBadRequest ErrorResponse

func (*APILabelSetPostBadRequest) aPILabelSetPostRes() {}

type APILabelSetPostForbidden ErrorResponse

func (*APILabelSetPostForbidden) aPILabelSetPostRes() {}

type APILabelSetPostInternalServerError ErrorResponse

func (*APILabelSetPostInternalServerError) aPILabelSetPostRes() {}

// APILabelSetPostNoContent is response for APILabelSetPost operation.
type APILabelSetPostNoContent struct{}

func (*APILabelSetPostNoContent) aPILabelSetPostRes() {}

type APILabelSetPostReq struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
	// Номер страницы, если нет метка ставится на всю книгу.
	PageNumber OptInt `json:"page_number"`
	// Название метки (ее код).
	Name string `json:"name"`
	// Значение метки.
	Value string `json:"value"`
}

// GetBookID returns the value of BookID.
func (s *APILabelSetPostReq) GetBookID() uuid.UUID {
	return s.BookID
}

// GetPageNumber returns the value of PageNumber.
func (s *APILabelSetPostReq) GetPageNumber() OptInt {
	return s.PageNumber
}

// GetName returns the value of Name.
func (s *APILabelSetPostReq) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *APILabelSetPostReq) GetValue() string {
	return s.Value
}

// SetBookID sets the value of BookID.
func (s *APILabelSetPostReq) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetPageNumber sets the value of PageNumber.
func (s *APILabelSetPostReq) SetPageNumber(val OptInt) {
	s.PageNumber = val
}

// SetName sets the value of Name.
func (s *APILabelSetPostReq) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *APILabelSetPostReq) SetValue(val string) {
	s.Value = val
}

type APILabelSetPostUnauthorized ErrorResponse

func (*APILabelSetPostUnauthorized) aPILabelSetPostRes() {}

type APIPageBodyPostBadRequest ErrorResponse

func (*APIPageBodyPostBadRequest) aPIPageBodyPostRes() {}

type APIPageBodyPostForbidden ErrorResponse

func (*APIPageBodyPostForbidden) aPIPageBodyPostRes() {}

type APIPageBodyPostInternalServerError ErrorResponse

func (*APIPageBodyPostInternalServerError) aPIPageBodyPostRes() {}

type APIPageBodyPostNotFound ErrorResponse

func (*APIPageBodyPostNotFound) aPIPageBodyPostRes() {}

type APIPageBodyPostOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s APIPageBodyPostOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

func (*APIPageBodyPostOK) aPIPageBodyPostRes() {}

type APIPageBodyPostReq struct {
	// ID книги.
	ID OptUUID `json:"id"`
	// Номер страницы.
	PageNumber OptInt `json:"page_number"`
	// Оригинальный URL страницы.
	URL OptURI `json:"url"`
}

// GetID returns the value of ID.
func (s *APIPageBodyPostReq) GetID() OptUUID {
	return s.ID
}

// GetPageNumber returns the value of PageNumber.
func (s *APIPageBodyPostReq) GetPageNumber() OptInt {
	return s.PageNumber
}

// GetURL returns the value of URL.
func (s *APIPageBodyPostReq) GetURL() OptURI {
	return s.URL
}

// SetID sets the value of ID.
func (s *APIPageBodyPostReq) SetID(val OptUUID) {
	s.ID = val
}

// SetPageNumber sets the value of PageNumber.
func (s *APIPageBodyPostReq) SetPageNumber(val OptInt) {
	s.PageNumber = val
}

// SetURL sets the value of URL.
func (s *APIPageBodyPostReq) SetURL(val OptURI) {
	s.URL = val
}

type APIPageBodyPostUnauthorized ErrorResponse

func (*APIPageBodyPostUnauthorized) aPIPageBodyPostRes() {}

type APIParsingBookExistsPostBadRequest ErrorResponse

func (*APIParsingBookExistsPostBadRequest) aPIParsingBookExistsPostRes() {}

type APIParsingBookExistsPostForbidden ErrorResponse

func (*APIParsingBookExistsPostForbidden) aPIParsingBookExistsPostRes() {}

type APIParsingBookExistsPostInternalServerError ErrorResponse

func (*APIParsingBookExistsPostInternalServerError) aPIParsingBookExistsPostRes() {}

type APIParsingBookExistsPostOK struct {
	// Результат обработки.
	Result []APIParsingBookExistsPostOKResultItem `json:"result"`
}

// GetResult returns the value of Result.
func (s *APIParsingBookExistsPostOK) GetResult() []APIParsingBookExistsPostOKResultItem {
	return s.Result
}

// SetResult sets the value of Result.
func (s *APIParsingBookExistsPostOK) SetResult(val []APIParsingBookExistsPostOKResultItem) {
	s.Result = val
}

func (*APIParsingBookExistsPostOK) aPIParsingBookExistsPostRes() {}

type APIParsingBookExistsPostOKResultItem struct {
	// Ссылка на внешнюю систему.
	URL url.URL `json:"url"`
	// Результат проверки.
	Result APIParsingBookExistsPostOKResultItemResult `json:"result"`
	// Данные об ошибке во время обработки.
	ErrorDetails OptString `json:"error_details"`
	// Список возможных ссылок дубликатов (зеркала внешних
	// систем и т.п.).
	PossibleDuplicates []url.URL `json:"possible_duplicates"`
}

// GetURL returns the value of URL.
func (s *APIParsingBookExistsPostOKResultItem) GetURL() url.URL {
	return s.URL
}

// GetResult returns the value of Result.
func (s *APIParsingBookExistsPostOKResultItem) GetResult() APIParsingBookExistsPostOKResultItemResult {
	return s.Result
}

// GetErrorDetails returns the value of ErrorDetails.
func (s *APIParsingBookExistsPostOKResultItem) GetErrorDetails() OptString {
	return s.ErrorDetails
}

// GetPossibleDuplicates returns the value of PossibleDuplicates.
func (s *APIParsingBookExistsPostOKResultItem) GetPossibleDuplicates() []url.URL {
	return s.PossibleDuplicates
}

// SetURL sets the value of URL.
func (s *APIParsingBookExistsPostOKResultItem) SetURL(val url.URL) {
	s.URL = val
}

// SetResult sets the value of Result.
func (s *APIParsingBookExistsPostOKResultItem) SetResult(val APIParsingBookExistsPostOKResultItemResult) {
	s.Result = val
}

// SetErrorDetails sets the value of ErrorDetails.
func (s *APIParsingBookExistsPostOKResultItem) SetErrorDetails(val OptString) {
	s.ErrorDetails = val
}

// SetPossibleDuplicates sets the value of PossibleDuplicates.
func (s *APIParsingBookExistsPostOKResultItem) SetPossibleDuplicates(val []url.URL) {
	s.PossibleDuplicates = val
}

// Результат проверки.
type APIParsingBookExistsPostOKResultItemResult string

const (
	APIParsingBookExistsPostOKResultItemResultOk          APIParsingBookExistsPostOKResultItemResult = "ok"
	APIParsingBookExistsPostOKResultItemResultUnsupported APIParsingBookExistsPostOKResultItemResult = "unsupported"
	APIParsingBookExistsPostOKResultItemResultError       APIParsingBookExistsPostOKResultItemResult = "error"
)

// AllValues returns all APIParsingBookExistsPostOKResultItemResult values.
func (APIParsingBookExistsPostOKResultItemResult) AllValues() []APIParsingBookExistsPostOKResultItemResult {
	return []APIParsingBookExistsPostOKResultItemResult{
		APIParsingBookExistsPostOKResultItemResultOk,
		APIParsingBookExistsPostOKResultItemResultUnsupported,
		APIParsingBookExistsPostOKResultItemResultError,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APIParsingBookExistsPostOKResultItemResult) MarshalText() ([]byte, error) {
	switch s {
	case APIParsingBookExistsPostOKResultItemResultOk:
		return []byte(s), nil
	case APIParsingBookExistsPostOKResultItemResultUnsupported:
		return []byte(s), nil
	case APIParsingBookExistsPostOKResultItemResultError:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APIParsingBookExistsPostOKResultItemResult) UnmarshalText(data []byte) error {
	switch APIParsingBookExistsPostOKResultItemResult(data) {
	case APIParsingBookExistsPostOKResultItemResultOk:
		*s = APIParsingBookExistsPostOKResultItemResultOk
		return nil
	case APIParsingBookExistsPostOKResultItemResultUnsupported:
		*s = APIParsingBookExistsPostOKResultItemResultUnsupported
		return nil
	case APIParsingBookExistsPostOKResultItemResultError:
		*s = APIParsingBookExistsPostOKResultItemResultError
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type APIParsingBookExistsPostReq struct {
	// Ссылки на внешние системы.
	Urls []url.URL `json:"urls"`
}

// GetUrls returns the value of Urls.
func (s *APIParsingBookExistsPostReq) GetUrls() []url.URL {
	return s.Urls
}

// SetUrls sets the value of Urls.
func (s *APIParsingBookExistsPostReq) SetUrls(val []url.URL) {
	s.Urls = val
}

type APIParsingBookExistsPostUnauthorized ErrorResponse

func (*APIParsingBookExistsPostUnauthorized) aPIParsingBookExistsPostRes() {}

type APIParsingPageExistsPostBadRequest ErrorResponse

func (*APIParsingPageExistsPostBadRequest) aPIParsingPageExistsPostRes() {}

type APIParsingPageExistsPostForbidden ErrorResponse

func (*APIParsingPageExistsPostForbidden) aPIParsingPageExistsPostRes() {}

type APIParsingPageExistsPostInternalServerError ErrorResponse

func (*APIParsingPageExistsPostInternalServerError) aPIParsingPageExistsPostRes() {}

type APIParsingPageExistsPostOK struct {
	// Результат обработки.
	Result []APIParsingPageExistsPostOKResultItem `json:"result"`
}

// GetResult returns the value of Result.
func (s *APIParsingPageExistsPostOK) GetResult() []APIParsingPageExistsPostOKResultItem {
	return s.Result
}

// SetResult sets the value of Result.
func (s *APIParsingPageExistsPostOK) SetResult(val []APIParsingPageExistsPostOKResultItem) {
	s.Result = val
}

func (*APIParsingPageExistsPostOK) aPIParsingPageExistsPostRes() {}

type APIParsingPageExistsPostOKResultItem struct {
	// Ссылка на книгу во внешней системе.
	BookURL url.URL `json:"book_url"`
	// Ссылка на изображение во внешней системе.
	ImageURL url.URL `json:"image_url"`
	// Результат проверки.
	Result APIParsingPageExistsPostOKResultItemResult `json:"result"`
	// Данные об ошибке во время обработки.
	ErrorDetails OptString `json:"error_details"`
}

// GetBookURL returns the value of BookURL.
func (s *APIParsingPageExistsPostOKResultItem) GetBookURL() url.URL {
	return s.BookURL
}

// GetImageURL returns the value of ImageURL.
func (s *APIParsingPageExistsPostOKResultItem) GetImageURL() url.URL {
	return s.ImageURL
}

// GetResult returns the value of Result.
func (s *APIParsingPageExistsPostOKResultItem) GetResult() APIParsingPageExistsPostOKResultItemResult {
	return s.Result
}

// GetErrorDetails returns the value of ErrorDetails.
func (s *APIParsingPageExistsPostOKResultItem) GetErrorDetails() OptString {
	return s.ErrorDetails
}

// SetBookURL sets the value of BookURL.
func (s *APIParsingPageExistsPostOKResultItem) SetBookURL(val url.URL) {
	s.BookURL = val
}

// SetImageURL sets the value of ImageURL.
func (s *APIParsingPageExistsPostOKResultItem) SetImageURL(val url.URL) {
	s.ImageURL = val
}

// SetResult sets the value of Result.
func (s *APIParsingPageExistsPostOKResultItem) SetResult(val APIParsingPageExistsPostOKResultItemResult) {
	s.Result = val
}

// SetErrorDetails sets the value of ErrorDetails.
func (s *APIParsingPageExistsPostOKResultItem) SetErrorDetails(val OptString) {
	s.ErrorDetails = val
}

// Результат проверки.
type APIParsingPageExistsPostOKResultItemResult string

const (
	APIParsingPageExistsPostOKResultItemResultOk          APIParsingPageExistsPostOKResultItemResult = "ok"
	APIParsingPageExistsPostOKResultItemResultUnsupported APIParsingPageExistsPostOKResultItemResult = "unsupported"
	APIParsingPageExistsPostOKResultItemResultError       APIParsingPageExistsPostOKResultItemResult = "error"
)

// AllValues returns all APIParsingPageExistsPostOKResultItemResult values.
func (APIParsingPageExistsPostOKResultItemResult) AllValues() []APIParsingPageExistsPostOKResultItemResult {
	return []APIParsingPageExistsPostOKResultItemResult{
		APIParsingPageExistsPostOKResultItemResultOk,
		APIParsingPageExistsPostOKResultItemResultUnsupported,
		APIParsingPageExistsPostOKResultItemResultError,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APIParsingPageExistsPostOKResultItemResult) MarshalText() ([]byte, error) {
	switch s {
	case APIParsingPageExistsPostOKResultItemResultOk:
		return []byte(s), nil
	case APIParsingPageExistsPostOKResultItemResultUnsupported:
		return []byte(s), nil
	case APIParsingPageExistsPostOKResultItemResultError:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APIParsingPageExistsPostOKResultItemResult) UnmarshalText(data []byte) error {
	switch APIParsingPageExistsPostOKResultItemResult(data) {
	case APIParsingPageExistsPostOKResultItemResultOk:
		*s = APIParsingPageExistsPostOKResultItemResultOk
		return nil
	case APIParsingPageExistsPostOKResultItemResultUnsupported:
		*s = APIParsingPageExistsPostOKResultItemResultUnsupported
		return nil
	case APIParsingPageExistsPostOKResultItemResultError:
		*s = APIParsingPageExistsPostOKResultItemResultError
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type APIParsingPageExistsPostReq struct {
	// Ссылки на внешние системы.
	Urls []APIParsingPageExistsPostReqUrlsItem `json:"urls"`
}

// GetUrls returns the value of Urls.
func (s *APIParsingPageExistsPostReq) GetUrls() []APIParsingPageExistsPostReqUrlsItem {
	return s.Urls
}

// SetUrls sets the value of Urls.
func (s *APIParsingPageExistsPostReq) SetUrls(val []APIParsingPageExistsPostReqUrlsItem) {
	s.Urls = val
}

type APIParsingPageExistsPostReqUrlsItem struct {
	// Ссылка на книгу во внешней системе.
	BookURL url.URL `json:"book_url"`
	// Ссылка на изображение во внешней системе.
	ImageURL url.URL `json:"image_url"`
}

// GetBookURL returns the value of BookURL.
func (s *APIParsingPageExistsPostReqUrlsItem) GetBookURL() url.URL {
	return s.BookURL
}

// GetImageURL returns the value of ImageURL.
func (s *APIParsingPageExistsPostReqUrlsItem) GetImageURL() url.URL {
	return s.ImageURL
}

// SetBookURL sets the value of BookURL.
func (s *APIParsingPageExistsPostReqUrlsItem) SetBookURL(val url.URL) {
	s.BookURL = val
}

// SetImageURL sets the value of ImageURL.
func (s *APIParsingPageExistsPostReqUrlsItem) SetImageURL(val url.URL) {
	s.ImageURL = val
}

type APIParsingPageExistsPostUnauthorized ErrorResponse

func (*APIParsingPageExistsPostUnauthorized) aPIParsingPageExistsPostRes() {}

type APISystemDeduplicateArchivePostBadRequest ErrorResponse

func (*APISystemDeduplicateArchivePostBadRequest) aPISystemDeduplicateArchivePostRes() {}

type APISystemDeduplicateArchivePostForbidden ErrorResponse

func (*APISystemDeduplicateArchivePostForbidden) aPISystemDeduplicateArchivePostRes() {}

type APISystemDeduplicateArchivePostInternalServerError ErrorResponse

func (*APISystemDeduplicateArchivePostInternalServerError) aPISystemDeduplicateArchivePostRes() {}

type APISystemDeduplicateArchivePostOKApplicationJSON []APISystemDeduplicateArchivePostOKItem

func (*APISystemDeduplicateArchivePostOKApplicationJSON) aPISystemDeduplicateArchivePostRes() {}

type APISystemDeduplicateArchivePostOKItem struct {
	// ID книги.
	BookID uuid.UUID `json:"book_id"`
	// Оригинальный адрес книги.
	BookOriginURL OptURI `json:"book_origin_url"`
	// Процент (0-1) вхождения архива в книгу.
	EntryPercentage float64 `json:"entry_percentage"`
	// Процент (0-1) вхождения книги в архив.
	ReverseEntryPercentage float64 `json:"reverse_entry_percentage"`
}

// GetBookID returns the value of BookID.
func (s *APISystemDeduplicateArchivePostOKItem) GetBookID() uuid.UUID {
	return s.BookID
}

// GetBookOriginURL returns the value of BookOriginURL.
func (s *APISystemDeduplicateArchivePostOKItem) GetBookOriginURL() OptURI {
	return s.BookOriginURL
}

// GetEntryPercentage returns the value of EntryPercentage.
func (s *APISystemDeduplicateArchivePostOKItem) GetEntryPercentage() float64 {
	return s.EntryPercentage
}

// GetReverseEntryPercentage returns the value of ReverseEntryPercentage.
func (s *APISystemDeduplicateArchivePostOKItem) GetReverseEntryPercentage() float64 {
	return s.ReverseEntryPercentage
}

// SetBookID sets the value of BookID.
func (s *APISystemDeduplicateArchivePostOKItem) SetBookID(val uuid.UUID) {
	s.BookID = val
}

// SetBookOriginURL sets the value of BookOriginURL.
func (s *APISystemDeduplicateArchivePostOKItem) SetBookOriginURL(val OptURI) {
	s.BookOriginURL = val
}

// SetEntryPercentage sets the value of EntryPercentage.
func (s *APISystemDeduplicateArchivePostOKItem) SetEntryPercentage(val float64) {
	s.EntryPercentage = val
}

// SetReverseEntryPercentage sets the value of ReverseEntryPercentage.
func (s *APISystemDeduplicateArchivePostOKItem) SetReverseEntryPercentage(val float64) {
	s.ReverseEntryPercentage = val
}

type APISystemDeduplicateArchivePostReq struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s APISystemDeduplicateArchivePostReq) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

type APISystemDeduplicateArchivePostUnauthorized ErrorResponse

func (*APISystemDeduplicateArchivePostUnauthorized) aPISystemDeduplicateArchivePostRes() {}

type APISystemHandlePostBadRequest ErrorResponse

func (*APISystemHandlePostBadRequest) aPISystemHandlePostRes() {}

type APISystemHandlePostForbidden ErrorResponse

func (*APISystemHandlePostForbidden) aPISystemHandlePostRes() {}

type APISystemHandlePostInternalServerError ErrorResponse

func (*APISystemHandlePostInternalServerError) aPISystemHandlePostRes() {}

type APISystemHandlePostOK struct {
	// Общее количество обработанных.
	TotalCount int `json:"total_count"`
	// Количество загруженных (успешно обработанных).
	LoadedCount int `json:"loaded_count"`
	// Количество дубликатов (пропущенных).
	DuplicateCount int `json:"duplicate_count"`
	// Количество неудачных обработок.
	ErrorCount int `json:"error_count"`
	// Не обработанные ссылки.
	NotHandled []url.URL `json:"not_handled"`
	// Подробности результата обработки.
	Details []APISystemHandlePostOKDetailsItem `json:"details"`
}

// GetTotalCount returns the value of TotalCount.
func (s *APISystemHandlePostOK) GetTotalCount() int {
	return s.TotalCount
}

// GetLoadedCount returns the value of LoadedCount.
func (s *APISystemHandlePostOK) GetLoadedCount() int {
	return s.LoadedCount
}

// GetDuplicateCount returns the value of DuplicateCount.
func (s *APISystemHandlePostOK) GetDuplicateCount() int {
	return s.DuplicateCount
}

// GetErrorCount returns the value of ErrorCount.
func (s *APISystemHandlePostOK) GetErrorCount() int {
	return s.ErrorCount
}

// GetNotHandled returns the value of NotHandled.
func (s *APISystemHandlePostOK) GetNotHandled() []url.URL {
	return s.NotHandled
}

// GetDetails returns the value of Details.
func (s *APISystemHandlePostOK) GetDetails() []APISystemHandlePostOKDetailsItem {
	return s.Details
}

// SetTotalCount sets the value of TotalCount.
func (s *APISystemHandlePostOK) SetTotalCount(val int) {
	s.TotalCount = val
}

// SetLoadedCount sets the value of LoadedCount.
func (s *APISystemHandlePostOK) SetLoadedCount(val int) {
	s.LoadedCount = val
}

// SetDuplicateCount sets the value of DuplicateCount.
func (s *APISystemHandlePostOK) SetDuplicateCount(val int) {
	s.DuplicateCount = val
}

// SetErrorCount sets the value of ErrorCount.
func (s *APISystemHandlePostOK) SetErrorCount(val int) {
	s.ErrorCount = val
}

// SetNotHandled sets the value of NotHandled.
func (s *APISystemHandlePostOK) SetNotHandled(val []url.URL) {
	s.NotHandled = val
}

// SetDetails sets the value of Details.
func (s *APISystemHandlePostOK) SetDetails(val []APISystemHandlePostOKDetailsItem) {
	s.Details = val
}

func (*APISystemHandlePostOK) aPISystemHandlePostRes() {}

type APISystemHandlePostOKDetailsItem struct {
	// Изначальная ссылка.
	URL url.URL `json:"url"`
	// Эта дубликат другой книги.
	IsDuplicate bool `json:"is_duplicate"`
	// ID книги в системе которую дублирует текущая.
	DuplicateID OptUUID `json:"duplicate_id"`
	// Книга успешно обработана и добавлена в систему.
	IsHandled bool `json:"is_handled"`
	// Описание ошибки которое произошло во время обработки.
	ErrorReason OptString `json:"error_reason"`
}

// GetURL returns the value of URL.
func (s *APISystemHandlePostOKDetailsItem) GetURL() url.URL {
	return s.URL
}

// GetIsDuplicate returns the value of IsDuplicate.
func (s *APISystemHandlePostOKDetailsItem) GetIsDuplicate() bool {
	return s.IsDuplicate
}

// GetDuplicateID returns the value of DuplicateID.
func (s *APISystemHandlePostOKDetailsItem) GetDuplicateID() OptUUID {
	return s.DuplicateID
}

// GetIsHandled returns the value of IsHandled.
func (s *APISystemHandlePostOKDetailsItem) GetIsHandled() bool {
	return s.IsHandled
}

// GetErrorReason returns the value of ErrorReason.
func (s *APISystemHandlePostOKDetailsItem) GetErrorReason() OptString {
	return s.ErrorReason
}

// SetURL sets the value of URL.
func (s *APISystemHandlePostOKDetailsItem) SetURL(val url.URL) {
	s.URL = val
}

// SetIsDuplicate sets the value of IsDuplicate.
func (s *APISystemHandlePostOKDetailsItem) SetIsDuplicate(val bool) {
	s.IsDuplicate = val
}

// SetDuplicateID sets the value of DuplicateID.
func (s *APISystemHandlePostOKDetailsItem) SetDuplicateID(val OptUUID) {
	s.DuplicateID = val
}

// SetIsHandled sets the value of IsHandled.
func (s *APISystemHandlePostOKDetailsItem) SetIsHandled(val bool) {
	s.IsHandled = val
}

// SetErrorReason sets the value of ErrorReason.
func (s *APISystemHandlePostOKDetailsItem) SetErrorReason(val OptString) {
	s.ErrorReason = val
}

type APISystemHandlePostReq struct {
	// Ссылки на внешние системы.
	Urls []url.URL `json:"urls"`
	// Режим обработки мульти ссылок (на тома книг).
	IsMulti OptBool `json:"is_multi"`
	// Пометить книги подтвержденными.
	AutoVerify OptBool `json:"auto_verify"`
}

// GetUrls returns the value of Urls.
func (s *APISystemHandlePostReq) GetUrls() []url.URL {
	return s.Urls
}

// GetIsMulti returns the value of IsMulti.
func (s *APISystemHandlePostReq) GetIsMulti() OptBool {
	return s.IsMulti
}

// GetAutoVerify returns the value of AutoVerify.
func (s *APISystemHandlePostReq) GetAutoVerify() OptBool {
	return s.AutoVerify
}

// SetUrls sets the value of Urls.
func (s *APISystemHandlePostReq) SetUrls(val []url.URL) {
	s.Urls = val
}

// SetIsMulti sets the value of IsMulti.
func (s *APISystemHandlePostReq) SetIsMulti(val OptBool) {
	s.IsMulti = val
}

// SetAutoVerify sets the value of AutoVerify.
func (s *APISystemHandlePostReq) SetAutoVerify(val OptBool) {
	s.AutoVerify = val
}

type APISystemHandlePostUnauthorized ErrorResponse

func (*APISystemHandlePostUnauthorized) aPISystemHandlePostRes() {}

type APISystemImportArchivePostBadRequest ErrorResponse

func (*APISystemImportArchivePostBadRequest) aPISystemImportArchivePostRes() {}

type APISystemImportArchivePostForbidden ErrorResponse

func (*APISystemImportArchivePostForbidden) aPISystemImportArchivePostRes() {}

type APISystemImportArchivePostInternalServerError ErrorResponse

func (*APISystemImportArchivePostInternalServerError) aPISystemImportArchivePostRes() {}

type APISystemImportArchivePostOK struct {
	// ID новой книги.
	ID uuid.UUID `json:"id"`
}

// GetID returns the value of ID.
func (s *APISystemImportArchivePostOK) GetID() uuid.UUID {
	return s.ID
}

// SetID sets the value of ID.
func (s *APISystemImportArchivePostOK) SetID(val uuid.UUID) {
	s.ID = val
}

func (*APISystemImportArchivePostOK) aPISystemImportArchivePostRes() {}

type APISystemImportArchivePostReq struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s APISystemImportArchivePostReq) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

type APISystemImportArchivePostUnauthorized ErrorResponse

func (*APISystemImportArchivePostUnauthorized) aPISystemImportArchivePostRes() {}

type APISystemInfoGetForbidden ErrorResponse

func (*APISystemInfoGetForbidden) aPISystemInfoGetRes() {}

type APISystemInfoGetInternalServerError ErrorResponse

func (*APISystemInfoGetInternalServerError) aPISystemInfoGetRes() {}

type APISystemInfoGetUnauthorized ErrorResponse

func (*APISystemInfoGetUnauthorized) aPISystemInfoGetRes() {}

type APISystemWorkerConfigPostBadRequest ErrorResponse

func (*APISystemWorkerConfigPostBadRequest) aPISystemWorkerConfigPostRes() {}

type APISystemWorkerConfigPostForbidden ErrorResponse

func (*APISystemWorkerConfigPostForbidden) aPISystemWorkerConfigPostRes() {}

type APISystemWorkerConfigPostInternalServerError ErrorResponse

func (*APISystemWorkerConfigPostInternalServerError) aPISystemWorkerConfigPostRes() {}

// APISystemWorkerConfigPostNoContent is response for APISystemWorkerConfigPost operation.
type APISystemWorkerConfigPostNoContent struct{}

func (*APISystemWorkerConfigPostNoContent) aPISystemWorkerConfigPostRes() {}

type APISystemWorkerConfigPostReq struct {
	// Количество раннеров.
	RunnersCount []APISystemWorkerConfigPostReqRunnersCountItem `json:"runners_count"`
}

// GetRunnersCount returns the value of RunnersCount.
func (s *APISystemWorkerConfigPostReq) GetRunnersCount() []APISystemWorkerConfigPostReqRunnersCountItem {
	return s.RunnersCount
}

// SetRunnersCount sets the value of RunnersCount.
func (s *APISystemWorkerConfigPostReq) SetRunnersCount(val []APISystemWorkerConfigPostReqRunnersCountItem) {
	s.RunnersCount = val
}

type APISystemWorkerConfigPostReqRunnersCountItem struct {
	// Название (код) раннера.
	Name string `json:"name"`
	// Новое количество раннеров.
	Count int `json:"count"`
}

// GetName returns the value of Name.
func (s *APISystemWorkerConfigPostReqRunnersCountItem) GetName() string {
	return s.Name
}

// GetCount returns the value of Count.
func (s *APISystemWorkerConfigPostReqRunnersCountItem) GetCount() int {
	return s.Count
}

// SetName sets the value of Name.
func (s *APISystemWorkerConfigPostReqRunnersCountItem) SetName(val string) {
	s.Name = val
}

// SetCount sets the value of Count.
func (s *APISystemWorkerConfigPostReqRunnersCountItem) SetCount(val int) {
	s.Count = val
}

type APISystemWorkerConfigPostUnauthorized ErrorResponse

func (*APISystemWorkerConfigPostUnauthorized) aPISystemWorkerConfigPostRes() {}

type APITaskCreatePostBadRequest ErrorResponse

func (*APITaskCreatePostBadRequest) aPITaskCreatePostRes() {}

type APITaskCreatePostForbidden ErrorResponse

func (*APITaskCreatePostForbidden) aPITaskCreatePostRes() {}

type APITaskCreatePostInternalServerError ErrorResponse

func (*APITaskCreatePostInternalServerError) aPITaskCreatePostRes() {}

// APITaskCreatePostNoContent is response for APITaskCreatePost operation.
type APITaskCreatePostNoContent struct{}

func (*APITaskCreatePostNoContent) aPITaskCreatePostRes() {}

type APITaskCreatePostReq struct {
	// Код задачи.
	Code APITaskCreatePostReqCode `json:"code"`
}

// GetCode returns the value of Code.
func (s *APITaskCreatePostReq) GetCode() APITaskCreatePostReqCode {
	return s.Code
}

// SetCode sets the value of Code.
func (s *APITaskCreatePostReq) SetCode(val APITaskCreatePostReqCode) {
	s.Code = val
}

// Код задачи.
type APITaskCreatePostReqCode string

const (
	APITaskCreatePostReqCodeDeduplicateFiles    APITaskCreatePostReqCode = "deduplicate_files"
	APITaskCreatePostReqCodeRemoveDetachedFiles APITaskCreatePostReqCode = "remove_detached_files"
	APITaskCreatePostReqCodeRemoveMismatchFiles APITaskCreatePostReqCode = "remove_mismatch_files"
	APITaskCreatePostReqCodeFillDeadHashes      APITaskCreatePostReqCode = "fill_dead_hashes"
	APITaskCreatePostReqCodeCleanDeletedPages   APITaskCreatePostReqCode = "clean_deleted_pages"
)

// AllValues returns all APITaskCreatePostReqCode values.
func (APITaskCreatePostReqCode) AllValues() []APITaskCreatePostReqCode {
	return []APITaskCreatePostReqCode{
		APITaskCreatePostReqCodeDeduplicateFiles,
		APITaskCreatePostReqCodeRemoveDetachedFiles,
		APITaskCreatePostReqCodeRemoveMismatchFiles,
		APITaskCreatePostReqCodeFillDeadHashes,
		APITaskCreatePostReqCodeCleanDeletedPages,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s APITaskCreatePostReqCode) MarshalText() ([]byte, error) {
	switch s {
	case APITaskCreatePostReqCodeDeduplicateFiles:
		return []byte(s), nil
	case APITaskCreatePostReqCodeRemoveDetachedFiles:
		return []byte(s), nil
	case APITaskCreatePostReqCodeRemoveMismatchFiles:
		return []byte(s), nil
	case APITaskCreatePostReqCodeFillDeadHashes:
		return []byte(s), nil
	case APITaskCreatePostReqCodeCleanDeletedPages:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *APITaskCreatePostReqCode) UnmarshalText(data []byte) error {
	switch APITaskCreatePostReqCode(data) {
	case APITaskCreatePostReqCodeDeduplicateFiles:
		*s = APITaskCreatePostReqCodeDeduplicateFiles
		return nil
	case APITaskCreatePostReqCodeRemoveDetachedFiles:
		*s = APITaskCreatePostReqCodeRemoveDetachedFiles
		return nil
	case APITaskCreatePostReqCodeRemoveMismatchFiles:
		*s = APITaskCreatePostReqCodeRemoveMismatchFiles
		return nil
	case APITaskCreatePostReqCodeFillDeadHashes:
		*s = APITaskCreatePostReqCodeFillDeadHashes
		return nil
	case APITaskCreatePostReqCodeCleanDeletedPages:
		*s = APITaskCreatePostReqCodeCleanDeletedPages
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type APITaskCreatePostUnauthorized ErrorResponse

func (*APITaskCreatePostUnauthorized) aPITaskCreatePostRes() {}

type APITaskResultsGetForbidden ErrorResponse

func (*APITaskResultsGetForbidden) aPITaskResultsGetRes() {}

type APITaskResultsGetInternalServerError ErrorResponse

func (*APITaskResultsGetInternalServerError) aPITaskResultsGetRes() {}

type APITaskResultsGetOK struct {
	// Результаты.
	Results []APITaskResultsGetOKResultsItem `json:"results"`
}

// GetResults returns the value of Results.
func (s *APITaskResultsGetOK) GetResults() []APITaskResultsGetOKResultsItem {
	return s.Results
}

// SetResults sets the value of Results.
func (s *APITaskResultsGetOK) SetResults(val []APITaskResultsGetOKResultsItem) {
	s.Results = val
}

func (*APITaskResultsGetOK) aPITaskResultsGetRes() {}

type APITaskResultsGetOKResultsItem struct {
	// Название задачи.
	Name string `json:"name"`
	// Данные об ошибке.
	Error OptString `json:"error"`
	// Данные результата.
	Result OptString `json:"result"`
	// Продолжительность выполнения задачи.
	DurationFormatted string `json:"duration_formatted"`
	// Время запуска задачи.
	StartedAt time.Time `json:"started_at"`
	// Время завершения задачи.
	EndedAt time.Time `json:"ended_at"`
	// Этапы выполнения задачи.
	Stages []APITaskResultsGetOKResultsItemStagesItem `json:"stages"`
}

// GetName returns the value of Name.
func (s *APITaskResultsGetOKResultsItem) GetName() string {
	return s.Name
}

// GetError returns the value of Error.
func (s *APITaskResultsGetOKResultsItem) GetError() OptString {
	return s.Error
}

// GetResult returns the value of Result.
func (s *APITaskResultsGetOKResultsItem) GetResult() OptString {
	return s.Result
}

// GetDurationFormatted returns the value of DurationFormatted.
func (s *APITaskResultsGetOKResultsItem) GetDurationFormatted() string {
	return s.DurationFormatted
}

// GetStartedAt returns the value of StartedAt.
func (s *APITaskResultsGetOKResultsItem) GetStartedAt() time.Time {
	return s.StartedAt
}

// GetEndedAt returns the value of EndedAt.
func (s *APITaskResultsGetOKResultsItem) GetEndedAt() time.Time {
	return s.EndedAt
}

// GetStages returns the value of Stages.
func (s *APITaskResultsGetOKResultsItem) GetStages() []APITaskResultsGetOKResultsItemStagesItem {
	return s.Stages
}

// SetName sets the value of Name.
func (s *APITaskResultsGetOKResultsItem) SetName(val string) {
	s.Name = val
}

// SetError sets the value of Error.
func (s *APITaskResultsGetOKResultsItem) SetError(val OptString) {
	s.Error = val
}

// SetResult sets the value of Result.
func (s *APITaskResultsGetOKResultsItem) SetResult(val OptString) {
	s.Result = val
}

// SetDurationFormatted sets the value of DurationFormatted.
func (s *APITaskResultsGetOKResultsItem) SetDurationFormatted(val string) {
	s.DurationFormatted = val
}

// SetStartedAt sets the value of StartedAt.
func (s *APITaskResultsGetOKResultsItem) SetStartedAt(val time.Time) {
	s.StartedAt = val
}

// SetEndedAt sets the value of EndedAt.
func (s *APITaskResultsGetOKResultsItem) SetEndedAt(val time.Time) {
	s.EndedAt = val
}

// SetStages sets the value of Stages.
func (s *APITaskResultsGetOKResultsItem) SetStages(val []APITaskResultsGetOKResultsItemStagesItem) {
	s.Stages = val
}

type APITaskResultsGetOKResultsItemStagesItem struct {
	// Название этапа.
	Name string `json:"name"`
	// Данные об ошибке.
	Error OptString `json:"error"`
	// Данные результата.
	Result OptString `json:"result"`
	// Продолжительность выполнения этапа.
	DurationFormatted string `json:"duration_formatted"`
	// Время запуска этапа.
	StartedAt time.Time `json:"started_at"`
	// Время завершения этапа.
	EndedAt time.Time `json:"ended_at"`
	// Количество выполненных шагов.
	Progress int64 `json:"progress"`
	// Общеее число шагов которое нужно для завершения этапа.
	Total int64 `json:"total"`
}

// GetName returns the value of Name.
func (s *APITaskResultsGetOKResultsItemStagesItem) GetName() string {
	return s.Name
}

// GetError returns the value of Error.
func (s *APITaskResultsGetOKResultsItemStagesItem) GetError() OptString {
	return s.Error
}

// GetResult returns the value of Result.
func (s *APITaskResultsGetOKResultsItemStagesItem) GetResult() OptString {
	return s.Result
}

// GetDurationFormatted returns the value of DurationFormatted.
func (s *APITaskResultsGetOKResultsItemStagesItem) GetDurationFormatted() string {
	return s.DurationFormatted
}

// GetStartedAt returns the value of StartedAt.
func (s *APITaskResultsGetOKResultsItemStagesItem) GetStartedAt() time.Time {
	return s.StartedAt
}

// GetEndedAt returns the value of EndedAt.
func (s *APITaskResultsGetOKResultsItemStagesItem) GetEndedAt() time.Time {
	return s.EndedAt
}

// GetProgress returns the value of Progress.
func (s *APITaskResultsGetOKResultsItemStagesItem) GetProgress() int64 {
	return s.Progress
}

// GetTotal returns the value of Total.
func (s *APITaskResultsGetOKResultsItemStagesItem) GetTotal() int64 {
	return s.Total
}

// SetName sets the value of Name.
func (s *APITaskResultsGetOKResultsItemStagesItem) SetName(val string) {
	s.Name = val
}

// SetError sets the value of Error.
func (s *APITaskResultsGetOKResultsItemStagesItem) SetError(val OptString) {
	s.Error = val
}

// SetResult sets the value of Result.
func (s *APITaskResultsGetOKResultsItemStagesItem) SetResult(val OptString) {
	s.Result = val
}

// SetDurationFormatted sets the value of DurationFormatted.
func (s *APITaskResultsGetOKResultsItemStagesItem) SetDurationFormatted(val string) {
	s.DurationFormatted = val
}

// SetStartedAt sets the value of StartedAt.
func (s *APITaskResultsGetOKResultsItemStagesItem) SetStartedAt(val time.Time) {
	s.StartedAt = val
}

// SetEndedAt sets the value of EndedAt.
func (s *APITaskResultsGetOKResultsItemStagesItem) SetEndedAt(val time.Time) {
	s.EndedAt = val
}

// SetProgress sets the value of Progress.
func (s *APITaskResultsGetOKResultsItemStagesItem) SetProgress(val int64) {
	s.Progress = val
}

// SetTotal sets the value of Total.
func (s *APITaskResultsGetOKResultsItemStagesItem) SetTotal(val int64) {
	s.Total = val
}

type APITaskResultsGetUnauthorized ErrorResponse

func (*APITaskResultsGetUnauthorized) aPITaskResultsGetRes() {}

type APIUserLoginPostBadRequest ErrorResponse

func (*APIUserLoginPostBadRequest) aPIUserLoginPostRes() {}

type APIUserLoginPostInternalServerError ErrorResponse

func (*APIUserLoginPostInternalServerError) aPIUserLoginPostRes() {}

// APIUserLoginPostNoContent is response for APIUserLoginPost operation.
type APIUserLoginPostNoContent struct {
	SetCookie OptString
}

// GetSetCookie returns the value of SetCookie.
func (s *APIUserLoginPostNoContent) GetSetCookie() OptString {
	return s.SetCookie
}

// SetSetCookie sets the value of SetCookie.
func (s *APIUserLoginPostNoContent) SetSetCookie(val OptString) {
	s.SetCookie = val
}

func (*APIUserLoginPostNoContent) aPIUserLoginPostRes() {}

type APIUserLoginPostReq struct {
	// Токен пользователя.
	Token string `json:"token"`
}

// GetToken returns the value of Token.
func (s *APIUserLoginPostReq) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *APIUserLoginPostReq) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/BookAttribute
type BookAttribute struct {
	// Код атрибута.
	Code string `json:"code"`
	// Название атрибута.
	Name string `json:"name"`
	// Значения атрибута.
	Values []string `json:"values"`
}

// GetCode returns the value of Code.
func (s *BookAttribute) GetCode() string {
	return s.Code
}

// GetName returns the value of Name.
func (s *BookAttribute) GetName() string {
	return s.Name
}

// GetValues returns the value of Values.
func (s *BookAttribute) GetValues() []string {
	return s.Values
}

// SetCode sets the value of Code.
func (s *BookAttribute) SetCode(val string) {
	s.Code = val
}

// SetName sets the value of Name.
func (s *BookAttribute) SetName(val string) {
	s.Name = val
}

// SetValues sets the value of Values.
func (s *BookAttribute) SetValues(val []string) {
	s.Values = val
}

// Данные книги.
// Ref: #/components/schemas/BookDetails
type BookDetails struct {
	// ID книги.
	ID uuid.UUID `json:"id"`
	// Время создания книги в системе.
	Created time.Time `json:"created"`
	// Ссылка для предпросмотра изображения книги.
	PreviewURL OptURI    `json:"preview_url"`
	Flags      BookFlags `json:"flags"`
	// Название книги.
	Name string `json:"name"`
	// Количество страниц.
	PageCount int `json:"page_count"`
	// Процент загруженных страниц.
	PageLoadedPercent float64 `json:"page_loaded_percent"`
	// Оригинальная ссылка на книгу (во внешней системе).
	OriginURL OptURI `json:"origin_url"`
	// Данные атрибутов книги.
	Attributes []BookAttribute `json:"attributes"`
	// Данные страниц книги.
	Pages []PageSimple `json:"pages"`
	// Данные о размере книги.
	Size OptBookDetailsSize `json:"size"`
}

// GetID returns the value of ID.
func (s *BookDetails) GetID() uuid.UUID {
	return s.ID
}

// GetCreated returns the value of Created.
func (s *BookDetails) GetCreated() time.Time {
	return s.Created
}

// GetPreviewURL returns the value of PreviewURL.
func (s *BookDetails) GetPreviewURL() OptURI {
	return s.PreviewURL
}

// GetFlags returns the value of Flags.
func (s *BookDetails) GetFlags() BookFlags {
	return s.Flags
}

// GetName returns the value of Name.
func (s *BookDetails) GetName() string {
	return s.Name
}

// GetPageCount returns the value of PageCount.
func (s *BookDetails) GetPageCount() int {
	return s.PageCount
}

// GetPageLoadedPercent returns the value of PageLoadedPercent.
func (s *BookDetails) GetPageLoadedPercent() float64 {
	return s.PageLoadedPercent
}

// GetOriginURL returns the value of OriginURL.
func (s *BookDetails) GetOriginURL() OptURI {
	return s.OriginURL
}

// GetAttributes returns the value of Attributes.
func (s *BookDetails) GetAttributes() []BookAttribute {
	return s.Attributes
}

// GetPages returns the value of Pages.
func (s *BookDetails) GetPages() []PageSimple {
	return s.Pages
}

// GetSize returns the value of Size.
func (s *BookDetails) GetSize() OptBookDetailsSize {
	return s.Size
}

// SetID sets the value of ID.
func (s *BookDetails) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCreated sets the value of Created.
func (s *BookDetails) SetCreated(val time.Time) {
	s.Created = val
}

// SetPreviewURL sets the value of PreviewURL.
func (s *BookDetails) SetPreviewURL(val OptURI) {
	s.PreviewURL = val
}

// SetFlags sets the value of Flags.
func (s *BookDetails) SetFlags(val BookFlags) {
	s.Flags = val
}

// SetName sets the value of Name.
func (s *BookDetails) SetName(val string) {
	s.Name = val
}

// SetPageCount sets the value of PageCount.
func (s *BookDetails) SetPageCount(val int) {
	s.PageCount = val
}

// SetPageLoadedPercent sets the value of PageLoadedPercent.
func (s *BookDetails) SetPageLoadedPercent(val float64) {
	s.PageLoadedPercent = val
}

// SetOriginURL sets the value of OriginURL.
func (s *BookDetails) SetOriginURL(val OptURI) {
	s.OriginURL = val
}

// SetAttributes sets the value of Attributes.
func (s *BookDetails) SetAttributes(val []BookAttribute) {
	s.Attributes = val
}

// SetPages sets the value of Pages.
func (s *BookDetails) SetPages(val []PageSimple) {
	s.Pages = val
}

// SetSize sets the value of Size.
func (s *BookDetails) SetSize(val OptBookDetailsSize) {
	s.Size = val
}

func (*BookDetails) aPIBookDetailsPostRes() {}

// Данные о размере книги.
type BookDetailsSize struct {
	// Размер уникальных файлов книги.
	Unique int64 `json:"unique"`
	// Размер уникальных файлов книги без учета мертвых
	// хешей.
	UniqueWithoutDeadHashes int64 `json:"unique_without_dead_hashes"`
	// Размер файлов в книге что пересекаются с другими
	// книгами.
	Shared int64 `json:"shared"`
	// Размер мертвых хешей в книге.
	DeadHashes int64 `json:"dead_hashes"`
	// Общий размер файлов книги.
	Total int64 `json:"total"`
	// Размер уникальных файлов книги в человекочитаемом
	// виде.
	UniqueFormatted string `json:"unique_formatted"`
	// Размер уникальных файлов книги без учета мертвых
	// хешей  в человекочитаемом виде.
	UniqueWithoutDeadHashesFormatted string `json:"unique_without_dead_hashes_formatted"`
	// Размер файлов в книге что пересекаются с другими
	// книгами в человекочитаемом виде.
	SharedFormatted string `json:"shared_formatted"`
	// Размер мертвых хешей в книге  в человекочитаемом виде.
	DeadHashesFormatted string `json:"dead_hashes_formatted"`
	// Общий размер файлов книги в человекочитаемом виде.
	TotalFormatted string `json:"total_formatted"`
}

// GetUnique returns the value of Unique.
func (s *BookDetailsSize) GetUnique() int64 {
	return s.Unique
}

// GetUniqueWithoutDeadHashes returns the value of UniqueWithoutDeadHashes.
func (s *BookDetailsSize) GetUniqueWithoutDeadHashes() int64 {
	return s.UniqueWithoutDeadHashes
}

// GetShared returns the value of Shared.
func (s *BookDetailsSize) GetShared() int64 {
	return s.Shared
}

// GetDeadHashes returns the value of DeadHashes.
func (s *BookDetailsSize) GetDeadHashes() int64 {
	return s.DeadHashes
}

// GetTotal returns the value of Total.
func (s *BookDetailsSize) GetTotal() int64 {
	return s.Total
}

// GetUniqueFormatted returns the value of UniqueFormatted.
func (s *BookDetailsSize) GetUniqueFormatted() string {
	return s.UniqueFormatted
}

// GetUniqueWithoutDeadHashesFormatted returns the value of UniqueWithoutDeadHashesFormatted.
func (s *BookDetailsSize) GetUniqueWithoutDeadHashesFormatted() string {
	return s.UniqueWithoutDeadHashesFormatted
}

// GetSharedFormatted returns the value of SharedFormatted.
func (s *BookDetailsSize) GetSharedFormatted() string {
	return s.SharedFormatted
}

// GetDeadHashesFormatted returns the value of DeadHashesFormatted.
func (s *BookDetailsSize) GetDeadHashesFormatted() string {
	return s.DeadHashesFormatted
}

// GetTotalFormatted returns the value of TotalFormatted.
func (s *BookDetailsSize) GetTotalFormatted() string {
	return s.TotalFormatted
}

// SetUnique sets the value of Unique.
func (s *BookDetailsSize) SetUnique(val int64) {
	s.Unique = val
}

// SetUniqueWithoutDeadHashes sets the value of UniqueWithoutDeadHashes.
func (s *BookDetailsSize) SetUniqueWithoutDeadHashes(val int64) {
	s.UniqueWithoutDeadHashes = val
}

// SetShared sets the value of Shared.
func (s *BookDetailsSize) SetShared(val int64) {
	s.Shared = val
}

// SetDeadHashes sets the value of DeadHashes.
func (s *BookDetailsSize) SetDeadHashes(val int64) {
	s.DeadHashes = val
}

// SetTotal sets the value of Total.
func (s *BookDetailsSize) SetTotal(val int64) {
	s.Total = val
}

// SetUniqueFormatted sets the value of UniqueFormatted.
func (s *BookDetailsSize) SetUniqueFormatted(val string) {
	s.UniqueFormatted = val
}

// SetUniqueWithoutDeadHashesFormatted sets the value of UniqueWithoutDeadHashesFormatted.
func (s *BookDetailsSize) SetUniqueWithoutDeadHashesFormatted(val string) {
	s.UniqueWithoutDeadHashesFormatted = val
}

// SetSharedFormatted sets the value of SharedFormatted.
func (s *BookDetailsSize) SetSharedFormatted(val string) {
	s.SharedFormatted = val
}

// SetDeadHashesFormatted sets the value of DeadHashesFormatted.
func (s *BookDetailsSize) SetDeadHashesFormatted(val string) {
	s.DeadHashesFormatted = val
}

// SetTotalFormatted sets the value of TotalFormatted.
func (s *BookDetailsSize) SetTotalFormatted(val string) {
	s.TotalFormatted = val
}

// Ref: #/components/schemas/BookFilter
type BookFilter struct {
	// Сортировать в обратном порядке.
	SortDesc OptBool `json:"sort_desc"`
	// Поле для сортировки.
	SortField OptBookFilterSortField `json:"sort_field"`
	// Количество книг на странице.
	Count OptInt `json:"count"`
	// Номер страницы.
	Page OptInt `json:"page"`
	// Время создание книги от.
	From OptDateTime `json:"from"`
	// Время создание книги до.
	To OptDateTime `json:"to"`
	// Статус подтверждения книги.
	VerifyStatus OptBookFilterFlagSelector `json:"verify_status"`
	// Статус удаления книги.
	DeleteStatus OptBookFilterFlagSelector `json:"delete_status"`
	// Статус загрузки книги.
	DownloadStatus OptBookFilterFlagSelector `json:"download_status"`
	// Показывать пересобранные книги.
	ShowRebuilded OptBookFilterFlagSelector `json:"show_rebuilded"`
	// Показывать книги без страниц.
	ShowWithoutPages OptBookFilterFlagSelector `json:"show_without_pages"`
	// Показывать книги без превью.
	ShowWithoutPreview OptBookFilterFlagSelector `json:"show_without_preview"`
	// Фильтр по полям.
	Filter OptBookFilterFilter `json:"filter"`
}

// GetSortDesc returns the value of SortDesc.
func (s *BookFilter) GetSortDesc() OptBool {
	return s.SortDesc
}

// GetSortField returns the value of SortField.
func (s *BookFilter) GetSortField() OptBookFilterSortField {
	return s.SortField
}

// GetCount returns the value of Count.
func (s *BookFilter) GetCount() OptInt {
	return s.Count
}

// GetPage returns the value of Page.
func (s *BookFilter) GetPage() OptInt {
	return s.Page
}

// GetFrom returns the value of From.
func (s *BookFilter) GetFrom() OptDateTime {
	return s.From
}

// GetTo returns the value of To.
func (s *BookFilter) GetTo() OptDateTime {
	return s.To
}

// GetVerifyStatus returns the value of VerifyStatus.
func (s *BookFilter) GetVerifyStatus() OptBookFilterFlagSelector {
	return s.VerifyStatus
}

// GetDeleteStatus returns the value of DeleteStatus.
func (s *BookFilter) GetDeleteStatus() OptBookFilterFlagSelector {
	return s.DeleteStatus
}

// GetDownloadStatus returns the value of DownloadStatus.
func (s *BookFilter) GetDownloadStatus() OptBookFilterFlagSelector {
	return s.DownloadStatus
}

// GetShowRebuilded returns the value of ShowRebuilded.
func (s *BookFilter) GetShowRebuilded() OptBookFilterFlagSelector {
	return s.ShowRebuilded
}

// GetShowWithoutPages returns the value of ShowWithoutPages.
func (s *BookFilter) GetShowWithoutPages() OptBookFilterFlagSelector {
	return s.ShowWithoutPages
}

// GetShowWithoutPreview returns the value of ShowWithoutPreview.
func (s *BookFilter) GetShowWithoutPreview() OptBookFilterFlagSelector {
	return s.ShowWithoutPreview
}

// GetFilter returns the value of Filter.
func (s *BookFilter) GetFilter() OptBookFilterFilter {
	return s.Filter
}

// SetSortDesc sets the value of SortDesc.
func (s *BookFilter) SetSortDesc(val OptBool) {
	s.SortDesc = val
}

// SetSortField sets the value of SortField.
func (s *BookFilter) SetSortField(val OptBookFilterSortField) {
	s.SortField = val
}

// SetCount sets the value of Count.
func (s *BookFilter) SetCount(val OptInt) {
	s.Count = val
}

// SetPage sets the value of Page.
func (s *BookFilter) SetPage(val OptInt) {
	s.Page = val
}

// SetFrom sets the value of From.
func (s *BookFilter) SetFrom(val OptDateTime) {
	s.From = val
}

// SetTo sets the value of To.
func (s *BookFilter) SetTo(val OptDateTime) {
	s.To = val
}

// SetVerifyStatus sets the value of VerifyStatus.
func (s *BookFilter) SetVerifyStatus(val OptBookFilterFlagSelector) {
	s.VerifyStatus = val
}

// SetDeleteStatus sets the value of DeleteStatus.
func (s *BookFilter) SetDeleteStatus(val OptBookFilterFlagSelector) {
	s.DeleteStatus = val
}

// SetDownloadStatus sets the value of DownloadStatus.
func (s *BookFilter) SetDownloadStatus(val OptBookFilterFlagSelector) {
	s.DownloadStatus = val
}

// SetShowRebuilded sets the value of ShowRebuilded.
func (s *BookFilter) SetShowRebuilded(val OptBookFilterFlagSelector) {
	s.ShowRebuilded = val
}

// SetShowWithoutPages sets the value of ShowWithoutPages.
func (s *BookFilter) SetShowWithoutPages(val OptBookFilterFlagSelector) {
	s.ShowWithoutPages = val
}

// SetShowWithoutPreview sets the value of ShowWithoutPreview.
func (s *BookFilter) SetShowWithoutPreview(val OptBookFilterFlagSelector) {
	s.ShowWithoutPreview = val
}

// SetFilter sets the value of Filter.
func (s *BookFilter) SetFilter(val OptBookFilterFilter) {
	s.Filter = val
}

// Фильтр по полям.
type BookFilterFilter struct {
	// Фильтр по названию, без учета регистра.
	Name OptString `json:"name"`
	// Фильтр по атрибутам.
	Attributes []BookFilterFilterAttributesItem `json:"attributes"`
	// Фильтр по меткам (без разделения на метки страниц и
	// книг).
	Labels []BookFilterFilterLabelsItem `json:"labels"`
}

// GetName returns the value of Name.
func (s *BookFilterFilter) GetName() OptString {
	return s.Name
}

// GetAttributes returns the value of Attributes.
func (s *BookFilterFilter) GetAttributes() []BookFilterFilterAttributesItem {
	return s.Attributes
}

// GetLabels returns the value of Labels.
func (s *BookFilterFilter) GetLabels() []BookFilterFilterLabelsItem {
	return s.Labels
}

// SetName sets the value of Name.
func (s *BookFilterFilter) SetName(val OptString) {
	s.Name = val
}

// SetAttributes sets the value of Attributes.
func (s *BookFilterFilter) SetAttributes(val []BookFilterFilterAttributesItem) {
	s.Attributes = val
}

// SetLabels sets the value of Labels.
func (s *BookFilterFilter) SetLabels(val []BookFilterFilterLabelsItem) {
	s.Labels = val
}

type BookFilterFilterAttributesItem struct {
	// Код атрибута.
	Code string `json:"code"`
	// Тип фильтра.
	Type BookFilterFilterAttributesItemType `json:"type"`
	// Значения для фильтрации (для операции like берется
	// только 1-е значение).
	Values []string `json:"values"`
	// Количество значений атрибута у книги.
	Count OptInt `json:"count"`
}

// GetCode returns the value of Code.
func (s *BookFilterFilterAttributesItem) GetCode() string {
	return s.Code
}

// GetType returns the value of Type.
func (s *BookFilterFilterAttributesItem) GetType() BookFilterFilterAttributesItemType {
	return s.Type
}

// GetValues returns the value of Values.
func (s *BookFilterFilterAttributesItem) GetValues() []string {
	return s.Values
}

// GetCount returns the value of Count.
func (s *BookFilterFilterAttributesItem) GetCount() OptInt {
	return s.Count
}

// SetCode sets the value of Code.
func (s *BookFilterFilterAttributesItem) SetCode(val string) {
	s.Code = val
}

// SetType sets the value of Type.
func (s *BookFilterFilterAttributesItem) SetType(val BookFilterFilterAttributesItemType) {
	s.Type = val
}

// SetValues sets the value of Values.
func (s *BookFilterFilterAttributesItem) SetValues(val []string) {
	s.Values = val
}

// SetCount sets the value of Count.
func (s *BookFilterFilterAttributesItem) SetCount(val OptInt) {
	s.Count = val
}

// Тип фильтра.
type BookFilterFilterAttributesItemType string

const (
	BookFilterFilterAttributesItemTypeLike    BookFilterFilterAttributesItemType = "like"
	BookFilterFilterAttributesItemTypeIn      BookFilterFilterAttributesItemType = "in"
	BookFilterFilterAttributesItemTypeCountEq BookFilterFilterAttributesItemType = "count_eq"
	BookFilterFilterAttributesItemTypeCountGt BookFilterFilterAttributesItemType = "count_gt"
	BookFilterFilterAttributesItemTypeCountLt BookFilterFilterAttributesItemType = "count_lt"
)

// AllValues returns all BookFilterFilterAttributesItemType values.
func (BookFilterFilterAttributesItemType) AllValues() []BookFilterFilterAttributesItemType {
	return []BookFilterFilterAttributesItemType{
		BookFilterFilterAttributesItemTypeLike,
		BookFilterFilterAttributesItemTypeIn,
		BookFilterFilterAttributesItemTypeCountEq,
		BookFilterFilterAttributesItemTypeCountGt,
		BookFilterFilterAttributesItemTypeCountLt,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BookFilterFilterAttributesItemType) MarshalText() ([]byte, error) {
	switch s {
	case BookFilterFilterAttributesItemTypeLike:
		return []byte(s), nil
	case BookFilterFilterAttributesItemTypeIn:
		return []byte(s), nil
	case BookFilterFilterAttributesItemTypeCountEq:
		return []byte(s), nil
	case BookFilterFilterAttributesItemTypeCountGt:
		return []byte(s), nil
	case BookFilterFilterAttributesItemTypeCountLt:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BookFilterFilterAttributesItemType) UnmarshalText(data []byte) error {
	switch BookFilterFilterAttributesItemType(data) {
	case BookFilterFilterAttributesItemTypeLike:
		*s = BookFilterFilterAttributesItemTypeLike
		return nil
	case BookFilterFilterAttributesItemTypeIn:
		*s = BookFilterFilterAttributesItemTypeIn
		return nil
	case BookFilterFilterAttributesItemTypeCountEq:
		*s = BookFilterFilterAttributesItemTypeCountEq
		return nil
	case BookFilterFilterAttributesItemTypeCountGt:
		*s = BookFilterFilterAttributesItemTypeCountGt
		return nil
	case BookFilterFilterAttributesItemTypeCountLt:
		*s = BookFilterFilterAttributesItemTypeCountLt
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type BookFilterFilterLabelsItem struct {
	// Название метки.
	Name string `json:"name"`
	// Тип фильтра.
	Type BookFilterFilterLabelsItemType `json:"type"`
	// Значения для фильтрации (для операции like берется
	// только 1-е значение).
	Values []string `json:"values"`
	// Количество значений метки у книги.
	Count OptInt `json:"count"`
}

// GetName returns the value of Name.
func (s *BookFilterFilterLabelsItem) GetName() string {
	return s.Name
}

// GetType returns the value of Type.
func (s *BookFilterFilterLabelsItem) GetType() BookFilterFilterLabelsItemType {
	return s.Type
}

// GetValues returns the value of Values.
func (s *BookFilterFilterLabelsItem) GetValues() []string {
	return s.Values
}

// GetCount returns the value of Count.
func (s *BookFilterFilterLabelsItem) GetCount() OptInt {
	return s.Count
}

// SetName sets the value of Name.
func (s *BookFilterFilterLabelsItem) SetName(val string) {
	s.Name = val
}

// SetType sets the value of Type.
func (s *BookFilterFilterLabelsItem) SetType(val BookFilterFilterLabelsItemType) {
	s.Type = val
}

// SetValues sets the value of Values.
func (s *BookFilterFilterLabelsItem) SetValues(val []string) {
	s.Values = val
}

// SetCount sets the value of Count.
func (s *BookFilterFilterLabelsItem) SetCount(val OptInt) {
	s.Count = val
}

// Тип фильтра.
type BookFilterFilterLabelsItemType string

const (
	BookFilterFilterLabelsItemTypeLike    BookFilterFilterLabelsItemType = "like"
	BookFilterFilterLabelsItemTypeIn      BookFilterFilterLabelsItemType = "in"
	BookFilterFilterLabelsItemTypeCountEq BookFilterFilterLabelsItemType = "count_eq"
	BookFilterFilterLabelsItemTypeCountGt BookFilterFilterLabelsItemType = "count_gt"
	BookFilterFilterLabelsItemTypeCountLt BookFilterFilterLabelsItemType = "count_lt"
)

// AllValues returns all BookFilterFilterLabelsItemType values.
func (BookFilterFilterLabelsItemType) AllValues() []BookFilterFilterLabelsItemType {
	return []BookFilterFilterLabelsItemType{
		BookFilterFilterLabelsItemTypeLike,
		BookFilterFilterLabelsItemTypeIn,
		BookFilterFilterLabelsItemTypeCountEq,
		BookFilterFilterLabelsItemTypeCountGt,
		BookFilterFilterLabelsItemTypeCountLt,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BookFilterFilterLabelsItemType) MarshalText() ([]byte, error) {
	switch s {
	case BookFilterFilterLabelsItemTypeLike:
		return []byte(s), nil
	case BookFilterFilterLabelsItemTypeIn:
		return []byte(s), nil
	case BookFilterFilterLabelsItemTypeCountEq:
		return []byte(s), nil
	case BookFilterFilterLabelsItemTypeCountGt:
		return []byte(s), nil
	case BookFilterFilterLabelsItemTypeCountLt:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BookFilterFilterLabelsItemType) UnmarshalText(data []byte) error {
	switch BookFilterFilterLabelsItemType(data) {
	case BookFilterFilterLabelsItemTypeLike:
		*s = BookFilterFilterLabelsItemTypeLike
		return nil
	case BookFilterFilterLabelsItemTypeIn:
		*s = BookFilterFilterLabelsItemTypeIn
		return nil
	case BookFilterFilterLabelsItemTypeCountEq:
		*s = BookFilterFilterLabelsItemTypeCountEq
		return nil
	case BookFilterFilterLabelsItemTypeCountGt:
		*s = BookFilterFilterLabelsItemTypeCountGt
		return nil
	case BookFilterFilterLabelsItemTypeCountLt:
		*s = BookFilterFilterLabelsItemTypeCountLt
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Выбор для значений флага книги.
// Ref: #/components/schemas/BookFilterFlagSelector
type BookFilterFlagSelector string

const (
	BookFilterFlagSelectorAll    BookFilterFlagSelector = "all"
	BookFilterFlagSelectorOnly   BookFilterFlagSelector = "only"
	BookFilterFlagSelectorExcept BookFilterFlagSelector = "except"
)

// AllValues returns all BookFilterFlagSelector values.
func (BookFilterFlagSelector) AllValues() []BookFilterFlagSelector {
	return []BookFilterFlagSelector{
		BookFilterFlagSelectorAll,
		BookFilterFlagSelectorOnly,
		BookFilterFlagSelectorExcept,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BookFilterFlagSelector) MarshalText() ([]byte, error) {
	switch s {
	case BookFilterFlagSelectorAll:
		return []byte(s), nil
	case BookFilterFlagSelectorOnly:
		return []byte(s), nil
	case BookFilterFlagSelectorExcept:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BookFilterFlagSelector) UnmarshalText(data []byte) error {
	switch BookFilterFlagSelector(data) {
	case BookFilterFlagSelectorAll:
		*s = BookFilterFlagSelectorAll
		return nil
	case BookFilterFlagSelectorOnly:
		*s = BookFilterFlagSelectorOnly
		return nil
	case BookFilterFlagSelectorExcept:
		*s = BookFilterFlagSelectorExcept
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Поле для сортировки.
type BookFilterSortField string

const (
	BookFilterSortFieldCreatedAt BookFilterSortField = "created_at"
	BookFilterSortFieldName      BookFilterSortField = "name"
	BookFilterSortFieldID        BookFilterSortField = "id"
	BookFilterSortFieldPageCount BookFilterSortField = "page_count"
)

// AllValues returns all BookFilterSortField values.
func (BookFilterSortField) AllValues() []BookFilterSortField {
	return []BookFilterSortField{
		BookFilterSortFieldCreatedAt,
		BookFilterSortFieldName,
		BookFilterSortFieldID,
		BookFilterSortFieldPageCount,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BookFilterSortField) MarshalText() ([]byte, error) {
	switch s {
	case BookFilterSortFieldCreatedAt:
		return []byte(s), nil
	case BookFilterSortFieldName:
		return []byte(s), nil
	case BookFilterSortFieldID:
		return []byte(s), nil
	case BookFilterSortFieldPageCount:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BookFilterSortField) UnmarshalText(data []byte) error {
	switch BookFilterSortField(data) {
	case BookFilterSortFieldCreatedAt:
		*s = BookFilterSortFieldCreatedAt
		return nil
	case BookFilterSortFieldName:
		*s = BookFilterSortFieldName
		return nil
	case BookFilterSortFieldID:
		*s = BookFilterSortFieldID
		return nil
	case BookFilterSortFieldPageCount:
		*s = BookFilterSortFieldPageCount
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Флаги книги.
// Ref: #/components/schemas/BookFlags
type BookFlags struct {
	// Было ли обработано название книги.
	ParsedName bool `json:"parsed_name"`
	// Были ли обработаны страницы.
	ParsedPage bool `json:"parsed_page"`
	// Была ли подтверждена книга.
	IsVerified bool `json:"is_verified"`
	// Была ли удалена книга.
	IsDeleted bool `json:"is_deleted"`
	// Пресобранная ли это книга.
	IsRebuild bool `json:"is_rebuild"`
}

// GetParsedName returns the value of ParsedName.
func (s *BookFlags) GetParsedName() bool {
	return s.ParsedName
}

// GetParsedPage returns the value of ParsedPage.
func (s *BookFlags) GetParsedPage() bool {
	return s.ParsedPage
}

// GetIsVerified returns the value of IsVerified.
func (s *BookFlags) GetIsVerified() bool {
	return s.IsVerified
}

// GetIsDeleted returns the value of IsDeleted.
func (s *BookFlags) GetIsDeleted() bool {
	return s.IsDeleted
}

// GetIsRebuild returns the value of IsRebuild.
func (s *BookFlags) GetIsRebuild() bool {
	return s.IsRebuild
}

// SetParsedName sets the value of ParsedName.
func (s *BookFlags) SetParsedName(val bool) {
	s.ParsedName = val
}

// SetParsedPage sets the value of ParsedPage.
func (s *BookFlags) SetParsedPage(val bool) {
	s.ParsedPage = val
}

// SetIsVerified sets the value of IsVerified.
func (s *BookFlags) SetIsVerified(val bool) {
	s.IsVerified = val
}

// SetIsDeleted sets the value of IsDeleted.
func (s *BookFlags) SetIsDeleted(val bool) {
	s.IsDeleted = val
}

// SetIsRebuild sets the value of IsRebuild.
func (s *BookFlags) SetIsRebuild(val bool) {
	s.IsRebuild = val
}

// Данные книги.
// Ref: #/components/schemas/BookRaw
type BookRaw struct {
	// ID книги.
	ID uuid.UUID `json:"id"`
	// Время создания книги в системе.
	CreateAt time.Time `json:"create_at"`
	// Оригинальная ссылка на книгу.
	OriginURL OptURI `json:"origin_url"`
	// Название книги.
	Name string `json:"name"`
	// Количество страниц.
	PageCount int `json:"page_count"`
	// Данные атрибутов книги.
	Attributes []BookRawAttributesItem `json:"attributes"`
	// Данные страниц книги.
	Pages []BookRawPagesItem `json:"pages"`
	// Данные атрибутов книги.
	Labels []BookRawLabelsItem `json:"labels"`
}

// GetID returns the value of ID.
func (s *BookRaw) GetID() uuid.UUID {
	return s.ID
}

// GetCreateAt returns the value of CreateAt.
func (s *BookRaw) GetCreateAt() time.Time {
	return s.CreateAt
}

// GetOriginURL returns the value of OriginURL.
func (s *BookRaw) GetOriginURL() OptURI {
	return s.OriginURL
}

// GetName returns the value of Name.
func (s *BookRaw) GetName() string {
	return s.Name
}

// GetPageCount returns the value of PageCount.
func (s *BookRaw) GetPageCount() int {
	return s.PageCount
}

// GetAttributes returns the value of Attributes.
func (s *BookRaw) GetAttributes() []BookRawAttributesItem {
	return s.Attributes
}

// GetPages returns the value of Pages.
func (s *BookRaw) GetPages() []BookRawPagesItem {
	return s.Pages
}

// GetLabels returns the value of Labels.
func (s *BookRaw) GetLabels() []BookRawLabelsItem {
	return s.Labels
}

// SetID sets the value of ID.
func (s *BookRaw) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCreateAt sets the value of CreateAt.
func (s *BookRaw) SetCreateAt(val time.Time) {
	s.CreateAt = val
}

// SetOriginURL sets the value of OriginURL.
func (s *BookRaw) SetOriginURL(val OptURI) {
	s.OriginURL = val
}

// SetName sets the value of Name.
func (s *BookRaw) SetName(val string) {
	s.Name = val
}

// SetPageCount sets the value of PageCount.
func (s *BookRaw) SetPageCount(val int) {
	s.PageCount = val
}

// SetAttributes sets the value of Attributes.
func (s *BookRaw) SetAttributes(val []BookRawAttributesItem) {
	s.Attributes = val
}

// SetPages sets the value of Pages.
func (s *BookRaw) SetPages(val []BookRawPagesItem) {
	s.Pages = val
}

// SetLabels sets the value of Labels.
func (s *BookRaw) SetLabels(val []BookRawLabelsItem) {
	s.Labels = val
}

func (*BookRaw) aPIBookRawPostRes() {}

type BookRawAttributesItem struct {
	// Код атрибута.
	Code string `json:"code"`
	// Значения атрибута.
	Values []string `json:"values"`
}

// GetCode returns the value of Code.
func (s *BookRawAttributesItem) GetCode() string {
	return s.Code
}

// GetValues returns the value of Values.
func (s *BookRawAttributesItem) GetValues() []string {
	return s.Values
}

// SetCode sets the value of Code.
func (s *BookRawAttributesItem) SetCode(val string) {
	s.Code = val
}

// SetValues sets the value of Values.
func (s *BookRawAttributesItem) SetValues(val []string) {
	s.Values = val
}

// Метка в системе.
type BookRawLabelsItem struct {
	// Номер страницы к которой привязана метка (0 если
	// привязана к книге).
	PageNumber int `json:"page_number"`
	// Код атрибута.
	Name string `json:"name"`
	// Значение.
	Value string `json:"value"`
	// Время создания отметки в системе.
	CreateAt time.Time `json:"create_at"`
}

// GetPageNumber returns the value of PageNumber.
func (s *BookRawLabelsItem) GetPageNumber() int {
	return s.PageNumber
}

// GetName returns the value of Name.
func (s *BookRawLabelsItem) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *BookRawLabelsItem) GetValue() string {
	return s.Value
}

// GetCreateAt returns the value of CreateAt.
func (s *BookRawLabelsItem) GetCreateAt() time.Time {
	return s.CreateAt
}

// SetPageNumber sets the value of PageNumber.
func (s *BookRawLabelsItem) SetPageNumber(val int) {
	s.PageNumber = val
}

// SetName sets the value of Name.
func (s *BookRawLabelsItem) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *BookRawLabelsItem) SetValue(val string) {
	s.Value = val
}

// SetCreateAt sets the value of CreateAt.
func (s *BookRawLabelsItem) SetCreateAt(val time.Time) {
	s.CreateAt = val
}

type BookRawPagesItem struct {
	// Номер страницы в книге.
	PageNumber int `json:"page_number"`
	// Ссылка на оригинальное изображение.
	OriginURL OptURI `json:"origin_url"`
	// Расширение файла.
	Ext string `json:"ext"`
	// Время создания страницы в системе.
	CreateAt time.Time `json:"create_at"`
	// Загружено ли тело страницы.
	Downloaded bool `json:"downloaded"`
	// Время загрузки тела страницы.
	LoadAt OptDateTime `json:"load_at"`
}

// GetPageNumber returns the value of PageNumber.
func (s *BookRawPagesItem) GetPageNumber() int {
	return s.PageNumber
}

// GetOriginURL returns the value of OriginURL.
func (s *BookRawPagesItem) GetOriginURL() OptURI {
	return s.OriginURL
}

// GetExt returns the value of Ext.
func (s *BookRawPagesItem) GetExt() string {
	return s.Ext
}

// GetCreateAt returns the value of CreateAt.
func (s *BookRawPagesItem) GetCreateAt() time.Time {
	return s.CreateAt
}

// GetDownloaded returns the value of Downloaded.
func (s *BookRawPagesItem) GetDownloaded() bool {
	return s.Downloaded
}

// GetLoadAt returns the value of LoadAt.
func (s *BookRawPagesItem) GetLoadAt() OptDateTime {
	return s.LoadAt
}

// SetPageNumber sets the value of PageNumber.
func (s *BookRawPagesItem) SetPageNumber(val int) {
	s.PageNumber = val
}

// SetOriginURL sets the value of OriginURL.
func (s *BookRawPagesItem) SetOriginURL(val OptURI) {
	s.OriginURL = val
}

// SetExt sets the value of Ext.
func (s *BookRawPagesItem) SetExt(val string) {
	s.Ext = val
}

// SetCreateAt sets the value of CreateAt.
func (s *BookRawPagesItem) SetCreateAt(val time.Time) {
	s.CreateAt = val
}

// SetDownloaded sets the value of Downloaded.
func (s *BookRawPagesItem) SetDownloaded(val bool) {
	s.Downloaded = val
}

// SetLoadAt sets the value of LoadAt.
func (s *BookRawPagesItem) SetLoadAt(val OptDateTime) {
	s.LoadAt = val
}

// Данные книги в упрощенном формате.
// Ref: #/components/schemas/BookShortInfo
type BookShortInfo struct {
	// ID книги.
	ID uuid.UUID `json:"id"`
	// Время создания книги в системе.
	Created time.Time `json:"created"`
	// Ссылка для предпросмотра изображения книги.
	PreviewURL OptURI `json:"preview_url"`
	// Название книги.
	Name string `json:"name"`
	// Количество страниц.
	PageCount int `json:"page_count"`
	// Процент загруженных страниц.
	PageLoadedPercent float64 `json:"page_loaded_percent"`
	// Список тегов (одноименный атрибут) книги.
	Tags []string `json:"tags"`
	// Есть теги которые не были включены в список.
	HasMoreTags bool      `json:"has_more_tags"`
	Flags       BookFlags `json:"flags"`
}

// GetID returns the value of ID.
func (s *BookShortInfo) GetID() uuid.UUID {
	return s.ID
}

// GetCreated returns the value of Created.
func (s *BookShortInfo) GetCreated() time.Time {
	return s.Created
}

// GetPreviewURL returns the value of PreviewURL.
func (s *BookShortInfo) GetPreviewURL() OptURI {
	return s.PreviewURL
}

// GetName returns the value of Name.
func (s *BookShortInfo) GetName() string {
	return s.Name
}

// GetPageCount returns the value of PageCount.
func (s *BookShortInfo) GetPageCount() int {
	return s.PageCount
}

// GetPageLoadedPercent returns the value of PageLoadedPercent.
func (s *BookShortInfo) GetPageLoadedPercent() float64 {
	return s.PageLoadedPercent
}

// GetTags returns the value of Tags.
func (s *BookShortInfo) GetTags() []string {
	return s.Tags
}

// GetHasMoreTags returns the value of HasMoreTags.
func (s *BookShortInfo) GetHasMoreTags() bool {
	return s.HasMoreTags
}

// GetFlags returns the value of Flags.
func (s *BookShortInfo) GetFlags() BookFlags {
	return s.Flags
}

// SetID sets the value of ID.
func (s *BookShortInfo) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCreated sets the value of Created.
func (s *BookShortInfo) SetCreated(val time.Time) {
	s.Created = val
}

// SetPreviewURL sets the value of PreviewURL.
func (s *BookShortInfo) SetPreviewURL(val OptURI) {
	s.PreviewURL = val
}

// SetName sets the value of Name.
func (s *BookShortInfo) SetName(val string) {
	s.Name = val
}

// SetPageCount sets the value of PageCount.
func (s *BookShortInfo) SetPageCount(val int) {
	s.PageCount = val
}

// SetPageLoadedPercent sets the value of PageLoadedPercent.
func (s *BookShortInfo) SetPageLoadedPercent(val float64) {
	s.PageLoadedPercent = val
}

// SetTags sets the value of Tags.
func (s *BookShortInfo) SetTags(val []string) {
	s.Tags = val
}

// SetHasMoreTags sets the value of HasMoreTags.
func (s *BookShortInfo) SetHasMoreTags(val bool) {
	s.HasMoreTags = val
}

// SetFlags sets the value of Flags.
func (s *BookShortInfo) SetFlags(val BookFlags) {
	s.Flags = val
}

// Крайне упрощенная модель книги.
// Ref: #/components/schemas/BookSimple
type BookSimple struct {
	// ID книги.
	ID uuid.UUID `json:"id"`
	// Время создания книги в системе.
	CreateAt time.Time `json:"create_at"`
	// Оригинальная ссылка на книгу (во внешней системе).
	OriginURL OptURI `json:"origin_url"`
	// Название книги.
	Name string `json:"name"`
	// Количество страниц.
	PageCount int `json:"page_count"`
	// Ссылка для предпросмотра изображения книги.
	PreviewURL OptURI    `json:"preview_url"`
	Flags      BookFlags `json:"flags"`
}

// GetID returns the value of ID.
func (s *BookSimple) GetID() uuid.UUID {
	return s.ID
}

// GetCreateAt returns the value of CreateAt.
func (s *BookSimple) GetCreateAt() time.Time {
	return s.CreateAt
}

// GetOriginURL returns the value of OriginURL.
func (s *BookSimple) GetOriginURL() OptURI {
	return s.OriginURL
}

// GetName returns the value of Name.
func (s *BookSimple) GetName() string {
	return s.Name
}

// GetPageCount returns the value of PageCount.
func (s *BookSimple) GetPageCount() int {
	return s.PageCount
}

// GetPreviewURL returns the value of PreviewURL.
func (s *BookSimple) GetPreviewURL() OptURI {
	return s.PreviewURL
}

// GetFlags returns the value of Flags.
func (s *BookSimple) GetFlags() BookFlags {
	return s.Flags
}

// SetID sets the value of ID.
func (s *BookSimple) SetID(val uuid.UUID) {
	s.ID = val
}

// SetCreateAt sets the value of CreateAt.
func (s *BookSimple) SetCreateAt(val time.Time) {
	s.CreateAt = val
}

// SetOriginURL sets the value of OriginURL.
func (s *BookSimple) SetOriginURL(val OptURI) {
	s.OriginURL = val
}

// SetName sets the value of Name.
func (s *BookSimple) SetName(val string) {
	s.Name = val
}

// SetPageCount sets the value of PageCount.
func (s *BookSimple) SetPageCount(val int) {
	s.PageCount = val
}

// SetPreviewURL sets the value of PreviewURL.
func (s *BookSimple) SetPreviewURL(val OptURI) {
	s.PreviewURL = val
}

// SetFlags sets the value of Flags.
func (s *BookSimple) SetFlags(val BookFlags) {
	s.Flags = val
}

type Cookies struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *Cookies) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *Cookies) SetAPIKey(val string) {
	s.APIKey = val
}

// Данные ошибки.
// Ref: #/components/schemas/ErrorResponse
type ErrorResponse struct {
	// Внутренний код ошибки.
	InnerCode string `json:"inner_code"`
	// Детальные данные ошибки.
	Details OptString `json:"details"`
}

// GetInnerCode returns the value of InnerCode.
func (s *ErrorResponse) GetInnerCode() string {
	return s.InnerCode
}

// GetDetails returns the value of Details.
func (s *ErrorResponse) GetDetails() OptString {
	return s.Details
}

// SetInnerCode sets the value of InnerCode.
func (s *ErrorResponse) SetInnerCode(val string) {
	s.InnerCode = val
}

// SetDetails sets the value of Details.
func (s *ErrorResponse) SetDetails(val OptString) {
	s.Details = val
}

type HeaderAuth struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *HeaderAuth) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *HeaderAuth) SetAPIKey(val string) {
	s.APIKey = val
}

// NewOptAPIAgentListPostOKItemStatus returns new OptAPIAgentListPostOKItemStatus with value set to v.
func NewOptAPIAgentListPostOKItemStatus(v APIAgentListPostOKItemStatus) OptAPIAgentListPostOKItemStatus {
	return OptAPIAgentListPostOKItemStatus{
		Value: v,
		Set:   true,
	}
}

// OptAPIAgentListPostOKItemStatus is optional APIAgentListPostOKItemStatus.
type OptAPIAgentListPostOKItemStatus struct {
	Value APIAgentListPostOKItemStatus
	Set   bool
}

// IsSet returns true if OptAPIAgentListPostOKItemStatus was set.
func (o OptAPIAgentListPostOKItemStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAPIAgentListPostOKItemStatus) Reset() {
	var v APIAgentListPostOKItemStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAPIAgentListPostOKItemStatus) SetTo(v APIAgentListPostOKItemStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAPIAgentListPostOKItemStatus) Get() (v APIAgentListPostOKItemStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAPIAgentListPostOKItemStatus) Or(d APIAgentListPostOKItemStatus) APIAgentListPostOKItemStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAPIBookRebuildPostReqFlags returns new OptAPIBookRebuildPostReqFlags with value set to v.
func NewOptAPIBookRebuildPostReqFlags(v APIBookRebuildPostReqFlags) OptAPIBookRebuildPostReqFlags {
	return OptAPIBookRebuildPostReqFlags{
		Value: v,
		Set:   true,
	}
}

// OptAPIBookRebuildPostReqFlags is optional APIBookRebuildPostReqFlags.
type OptAPIBookRebuildPostReqFlags struct {
	Value APIBookRebuildPostReqFlags
	Set   bool
}

// IsSet returns true if OptAPIBookRebuildPostReqFlags was set.
func (o OptAPIBookRebuildPostReqFlags) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAPIBookRebuildPostReqFlags) Reset() {
	var v APIBookRebuildPostReqFlags
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAPIBookRebuildPostReqFlags) SetTo(v APIBookRebuildPostReqFlags) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAPIBookRebuildPostReqFlags) Get() (v APIBookRebuildPostReqFlags, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAPIBookRebuildPostReqFlags) Or(d APIBookRebuildPostReqFlags) APIBookRebuildPostReqFlags {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBookDetailsSize returns new OptBookDetailsSize with value set to v.
func NewOptBookDetailsSize(v BookDetailsSize) OptBookDetailsSize {
	return OptBookDetailsSize{
		Value: v,
		Set:   true,
	}
}

// OptBookDetailsSize is optional BookDetailsSize.
type OptBookDetailsSize struct {
	Value BookDetailsSize
	Set   bool
}

// IsSet returns true if OptBookDetailsSize was set.
func (o OptBookDetailsSize) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBookDetailsSize) Reset() {
	var v BookDetailsSize
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBookDetailsSize) SetTo(v BookDetailsSize) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBookDetailsSize) Get() (v BookDetailsSize, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBookDetailsSize) Or(d BookDetailsSize) BookDetailsSize {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBookFilterFilter returns new OptBookFilterFilter with value set to v.
func NewOptBookFilterFilter(v BookFilterFilter) OptBookFilterFilter {
	return OptBookFilterFilter{
		Value: v,
		Set:   true,
	}
}

// OptBookFilterFilter is optional BookFilterFilter.
type OptBookFilterFilter struct {
	Value BookFilterFilter
	Set   bool
}

// IsSet returns true if OptBookFilterFilter was set.
func (o OptBookFilterFilter) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBookFilterFilter) Reset() {
	var v BookFilterFilter
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBookFilterFilter) SetTo(v BookFilterFilter) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBookFilterFilter) Get() (v BookFilterFilter, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBookFilterFilter) Or(d BookFilterFilter) BookFilterFilter {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBookFilterFlagSelector returns new OptBookFilterFlagSelector with value set to v.
func NewOptBookFilterFlagSelector(v BookFilterFlagSelector) OptBookFilterFlagSelector {
	return OptBookFilterFlagSelector{
		Value: v,
		Set:   true,
	}
}

// OptBookFilterFlagSelector is optional BookFilterFlagSelector.
type OptBookFilterFlagSelector struct {
	Value BookFilterFlagSelector
	Set   bool
}

// IsSet returns true if OptBookFilterFlagSelector was set.
func (o OptBookFilterFlagSelector) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBookFilterFlagSelector) Reset() {
	var v BookFilterFlagSelector
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBookFilterFlagSelector) SetTo(v BookFilterFlagSelector) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBookFilterFlagSelector) Get() (v BookFilterFlagSelector, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBookFilterFlagSelector) Or(d BookFilterFlagSelector) BookFilterFlagSelector {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBookFilterSortField returns new OptBookFilterSortField with value set to v.
func NewOptBookFilterSortField(v BookFilterSortField) OptBookFilterSortField {
	return OptBookFilterSortField{
		Value: v,
		Set:   true,
	}
}

// OptBookFilterSortField is optional BookFilterSortField.
type OptBookFilterSortField struct {
	Value BookFilterSortField
	Set   bool
}

// IsSet returns true if OptBookFilterSortField was set.
func (o OptBookFilterSortField) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBookFilterSortField) Reset() {
	var v BookFilterSortField
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBookFilterSortField) SetTo(v BookFilterSortField) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBookFilterSortField) Get() (v BookFilterSortField, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBookFilterSortField) Or(d BookFilterSortField) BookFilterSortField {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSystemInfoMonitor returns new OptSystemInfoMonitor with value set to v.
func NewOptSystemInfoMonitor(v SystemInfoMonitor) OptSystemInfoMonitor {
	return OptSystemInfoMonitor{
		Value: v,
		Set:   true,
	}
}

// OptSystemInfoMonitor is optional SystemInfoMonitor.
type OptSystemInfoMonitor struct {
	Value SystemInfoMonitor
	Set   bool
}

// IsSet returns true if OptSystemInfoMonitor was set.
func (o OptSystemInfoMonitor) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSystemInfoMonitor) Reset() {
	var v SystemInfoMonitor
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSystemInfoMonitor) SetTo(v SystemInfoMonitor) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSystemInfoMonitor) Get() (v SystemInfoMonitor, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSystemInfoMonitor) Or(d SystemInfoMonitor) SystemInfoMonitor {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/PageSimple
type PageSimple struct {
	// Номер страницы в книге.
	PageNumber int `json:"page_number"`
	// Ссылка на изображение для предпросмотра.
	PreviewURL OptURI `json:"preview_url"`
	// Есть ли у страницы мертвый хеш (важно, если данных нет,
	// то этот факт не известен).
	HasDeadHash OptBool `json:"has_dead_hash"`
}

// GetPageNumber returns the value of PageNumber.
func (s *PageSimple) GetPageNumber() int {
	return s.PageNumber
}

// GetPreviewURL returns the value of PreviewURL.
func (s *PageSimple) GetPreviewURL() OptURI {
	return s.PreviewURL
}

// GetHasDeadHash returns the value of HasDeadHash.
func (s *PageSimple) GetHasDeadHash() OptBool {
	return s.HasDeadHash
}

// SetPageNumber sets the value of PageNumber.
func (s *PageSimple) SetPageNumber(val int) {
	s.PageNumber = val
}

// SetPreviewURL sets the value of PreviewURL.
func (s *PageSimple) SetPreviewURL(val OptURI) {
	s.PreviewURL = val
}

// SetHasDeadHash sets the value of HasDeadHash.
func (s *PageSimple) SetHasDeadHash(val OptBool) {
	s.HasDeadHash = val
}

// Информация о системе.
// Ref: #/components/schemas/SystemInfo
type SystemInfo struct {
	// Количество книг.
	Count int `json:"count"`
	// Количество загруженных книг.
	DownloadedCount int `json:"downloaded_count"`
	// Количество верифицированных книг.
	VerifiedCount int `json:"verified_count"`
	// Количество пересобранных книг.
	RebuildedCount int `json:"rebuilded_count"`
	// Количество не обработанных книг.
	NotLoadCount int `json:"not_load_count"`
	// Количество удаленных книг.
	DeletedCount int `json:"deleted_count"`
	// Количество страниц.
	PageCount int `json:"page_count"`
	// Количество не загруженных страниц.
	NotLoadPageCount int `json:"not_load_page_count"`
	// Количество страниц без тела (файла).
	PageWithoutBodyCount int `json:"page_without_body_count"`
	// Количество удаленных страниц (которые не были
	// очищены).
	DeletedPageCount int `json:"deleted_page_count"`
	// Количество файлов.
	FileCount int `json:"file_count"`
	// Количество файлов без рассчитанного хеша.
	UnhashedFileCount int `json:"unhashed_file_count"`
	// Количество мертвых хешей.
	DeadHashCount int `json:"dead_hash_count"`
	// Объем загруженных изображений в байтах.
	PagesSize int64 `json:"pages_size"`
	// Объем загруженных изображений в человеко-читаемом
	// формате.
	PagesSizeFormatted string `json:"pages_size_formatted"`
	// Объем файлов в байтах.
	FilesSize int64 `json:"files_size"`
	// Объем файлов в человеко-читаемом формате.
	FilesSizeFormatted string `json:"files_size_formatted"`
	// Данные системы мониторинга.
	Monitor OptSystemInfoMonitor `json:"monitor"`
}

// GetCount returns the value of Count.
func (s *SystemInfo) GetCount() int {
	return s.Count
}

// GetDownloadedCount returns the value of DownloadedCount.
func (s *SystemInfo) GetDownloadedCount() int {
	return s.DownloadedCount
}

// GetVerifiedCount returns the value of VerifiedCount.
func (s *SystemInfo) GetVerifiedCount() int {
	return s.VerifiedCount
}

// GetRebuildedCount returns the value of RebuildedCount.
func (s *SystemInfo) GetRebuildedCount() int {
	return s.RebuildedCount
}

// GetNotLoadCount returns the value of NotLoadCount.
func (s *SystemInfo) GetNotLoadCount() int {
	return s.NotLoadCount
}

// GetDeletedCount returns the value of DeletedCount.
func (s *SystemInfo) GetDeletedCount() int {
	return s.DeletedCount
}

// GetPageCount returns the value of PageCount.
func (s *SystemInfo) GetPageCount() int {
	return s.PageCount
}

// GetNotLoadPageCount returns the value of NotLoadPageCount.
func (s *SystemInfo) GetNotLoadPageCount() int {
	return s.NotLoadPageCount
}

// GetPageWithoutBodyCount returns the value of PageWithoutBodyCount.
func (s *SystemInfo) GetPageWithoutBodyCount() int {
	return s.PageWithoutBodyCount
}

// GetDeletedPageCount returns the value of DeletedPageCount.
func (s *SystemInfo) GetDeletedPageCount() int {
	return s.DeletedPageCount
}

// GetFileCount returns the value of FileCount.
func (s *SystemInfo) GetFileCount() int {
	return s.FileCount
}

// GetUnhashedFileCount returns the value of UnhashedFileCount.
func (s *SystemInfo) GetUnhashedFileCount() int {
	return s.UnhashedFileCount
}

// GetDeadHashCount returns the value of DeadHashCount.
func (s *SystemInfo) GetDeadHashCount() int {
	return s.DeadHashCount
}

// GetPagesSize returns the value of PagesSize.
func (s *SystemInfo) GetPagesSize() int64 {
	return s.PagesSize
}

// GetPagesSizeFormatted returns the value of PagesSizeFormatted.
func (s *SystemInfo) GetPagesSizeFormatted() string {
	return s.PagesSizeFormatted
}

// GetFilesSize returns the value of FilesSize.
func (s *SystemInfo) GetFilesSize() int64 {
	return s.FilesSize
}

// GetFilesSizeFormatted returns the value of FilesSizeFormatted.
func (s *SystemInfo) GetFilesSizeFormatted() string {
	return s.FilesSizeFormatted
}

// GetMonitor returns the value of Monitor.
func (s *SystemInfo) GetMonitor() OptSystemInfoMonitor {
	return s.Monitor
}

// SetCount sets the value of Count.
func (s *SystemInfo) SetCount(val int) {
	s.Count = val
}

// SetDownloadedCount sets the value of DownloadedCount.
func (s *SystemInfo) SetDownloadedCount(val int) {
	s.DownloadedCount = val
}

// SetVerifiedCount sets the value of VerifiedCount.
func (s *SystemInfo) SetVerifiedCount(val int) {
	s.VerifiedCount = val
}

// SetRebuildedCount sets the value of RebuildedCount.
func (s *SystemInfo) SetRebuildedCount(val int) {
	s.RebuildedCount = val
}

// SetNotLoadCount sets the value of NotLoadCount.
func (s *SystemInfo) SetNotLoadCount(val int) {
	s.NotLoadCount = val
}

// SetDeletedCount sets the value of DeletedCount.
func (s *SystemInfo) SetDeletedCount(val int) {
	s.DeletedCount = val
}

// SetPageCount sets the value of PageCount.
func (s *SystemInfo) SetPageCount(val int) {
	s.PageCount = val
}

// SetNotLoadPageCount sets the value of NotLoadPageCount.
func (s *SystemInfo) SetNotLoadPageCount(val int) {
	s.NotLoadPageCount = val
}

// SetPageWithoutBodyCount sets the value of PageWithoutBodyCount.
func (s *SystemInfo) SetPageWithoutBodyCount(val int) {
	s.PageWithoutBodyCount = val
}

// SetDeletedPageCount sets the value of DeletedPageCount.
func (s *SystemInfo) SetDeletedPageCount(val int) {
	s.DeletedPageCount = val
}

// SetFileCount sets the value of FileCount.
func (s *SystemInfo) SetFileCount(val int) {
	s.FileCount = val
}

// SetUnhashedFileCount sets the value of UnhashedFileCount.
func (s *SystemInfo) SetUnhashedFileCount(val int) {
	s.UnhashedFileCount = val
}

// SetDeadHashCount sets the value of DeadHashCount.
func (s *SystemInfo) SetDeadHashCount(val int) {
	s.DeadHashCount = val
}

// SetPagesSize sets the value of PagesSize.
func (s *SystemInfo) SetPagesSize(val int64) {
	s.PagesSize = val
}

// SetPagesSizeFormatted sets the value of PagesSizeFormatted.
func (s *SystemInfo) SetPagesSizeFormatted(val string) {
	s.PagesSizeFormatted = val
}

// SetFilesSize sets the value of FilesSize.
func (s *SystemInfo) SetFilesSize(val int64) {
	s.FilesSize = val
}

// SetFilesSizeFormatted sets the value of FilesSizeFormatted.
func (s *SystemInfo) SetFilesSizeFormatted(val string) {
	s.FilesSizeFormatted = val
}

// SetMonitor sets the value of Monitor.
func (s *SystemInfo) SetMonitor(val OptSystemInfoMonitor) {
	s.Monitor = val
}

func (*SystemInfo) aPISystemInfoGetRes() {}

// Данные системы мониторинга.
type SystemInfoMonitor struct {
	// Данные об обработчиках.
	Workers []SystemInfoMonitorWorkersItem `json:"workers"`
}

// GetWorkers returns the value of Workers.
func (s *SystemInfoMonitor) GetWorkers() []SystemInfoMonitorWorkersItem {
	return s.Workers
}

// SetWorkers sets the value of Workers.
func (s *SystemInfoMonitor) SetWorkers(val []SystemInfoMonitorWorkersItem) {
	s.Workers = val
}

type SystemInfoMonitorWorkersItem struct {
	// Название обработчика.
	Name string `json:"name"`
	// В очереди на обработку.
	InQueue int `json:"in_queue"`
	// В обработке.
	InWork int `json:"in_work"`
	// Количество экземпляров обработчика (потоков).
	Runners int `json:"runners"`
}

// GetName returns the value of Name.
func (s *SystemInfoMonitorWorkersItem) GetName() string {
	return s.Name
}

// GetInQueue returns the value of InQueue.
func (s *SystemInfoMonitorWorkersItem) GetInQueue() int {
	return s.InQueue
}

// GetInWork returns the value of InWork.
func (s *SystemInfoMonitorWorkersItem) GetInWork() int {
	return s.InWork
}

// GetRunners returns the value of Runners.
func (s *SystemInfoMonitorWorkersItem) GetRunners() int {
	return s.Runners
}

// SetName sets the value of Name.
func (s *SystemInfoMonitorWorkersItem) SetName(val string) {
	s.Name = val
}

// SetInQueue sets the value of InQueue.
func (s *SystemInfoMonitorWorkersItem) SetInQueue(val int) {
	s.InQueue = val
}

// SetInWork sets the value of InWork.
func (s *SystemInfoMonitorWorkersItem) SetInWork(val int) {
	s.InWork = val
}

// SetRunners sets the value of Runners.
func (s *SystemInfoMonitorWorkersItem) SetRunners(val int) {
	s.Runners = val
}
